"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),n.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _defineProperty(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function _asyncToGenerator(t){return function(){var e=this,r=arguments;return new Promise(function(n,o){function i(t,e){try{var r=a[t](e),i=r.value}catch(t){return void o(t)}r.done?n(i):Promise.resolve(i).then(u,c)}function u(t){i("next",t)}function c(t){i("throw",t)}var a=t.apply(e,r);u()})}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function stripMetadata(t){return!t||"object"!==_typeof(t)||t instanceof Date||(delete t._id,delete t.__v,Object.entries(t).forEach(function(t){var e=t[1];return stripMetadata(e)})),t}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _koaRouter=_interopRequireDefault(require("koa-router")),ProjectionRouter=function(t){function e(t){var r;return _classCallCheck(this,e),r=_possibleConstructorReturn(this,_getPrototypeOf(e).call(this)),Object.entries(t).forEach(function(t){var e=t[0],n=t[1];n.forEach(function(t){r.get("/".concat(e,"/").concat(t.name,"/:id?/:facet?"),function(){var r=_asyncToGenerator(regeneratorRuntime.mark(function r(n,o){var i,u,c,a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,i=n.params,u=i.id,c=i.facet,r.next=4,t.view.get(u?_objectSpread({id:u},n.query):n.query,n.$identity,c);case 4:a=r.sent,n.status=200,n.body=stripMetadata(u&&!c?a[0]:a),r.next=13;break;case 9:return r.prev=9,r.t0=r.catch(0),console.log("Failed loading projection /".concat(e),r.t0),r.abrupt("return",o());case 13:case"end":return r.stop()}},r,this,[[0,9]])}));return function(t,e){return r.apply(this,arguments)}}())})}),r}return _inherits(e,t),e}(_koaRouter.default);exports.default=ProjectionRouter;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3Rpb25Sb3V0ZXIuanMiXSwibmFtZXMiOlsic3RyaXBNZXRhZGF0YSIsImRhdGEiLCJfdHlwZW9mIiwiX2lkIiwiX192IiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJfcmVmIiwiaSIsIl9rb2FSb3V0ZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIlByb2plY3Rpb25Sb3V0ZXIiLCJwcm9qZWN0aW9ucyIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2dldFByb3RvdHlwZU9mIiwiY2FsbCIsIl9yZWYyIiwibmFtZSIsImNsaWVudFByb2plY3Rpb25zIiwicHJvamVjdGlvbiIsImdldCIsImNvbmNhdCIsIl9yZWYzIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiY3R4IiwibmV4dCIsImlkIiwicGFyYW1zIiwicXVlcnkiLCIkaWRlbnRpdHkiLCJzdGF0dXMiLCJmYWNldCIsInJlc3VsdCIsImNvbnNvbGUiLCJfeCIsIl94MiIsImFwcGx5IiwiYXJndW1lbnRzIiwiUm91dGVyIl0sIm1hcHBpbmdzIjoiczlEQUVBLFFBQVNBLGVBQWNDLEdBTXJCLE9BTElBLEdBQVEsV0FBQUMsUUFBQUQsSUFBNEJBLFlBQUVBLGNBQ2pDQSxHQUFLRSxVQUNMRixHQUFLRyxJQUNaQyxPQUFPQyxRQUFRTCxHQUFNTSxRQUFRLFNBQUFDLEdBQUEsR0FBQUMsR0FBQUQsRUFBQSxFQUFBLE9BQUFSLGVBQUlTLE1BRTVCUiwrRUFSVCxJQUFBUyxZQUFBQyx1QkFBQUMsUUFBQSxlQVdxQkMsNkJBQ25CLFFBQUFBLEdBQUFDLEdBQUEsR0FBQUMsRUFBQSxPQUFBQyxpQkFBQUMsS0FBQUosR0FDRUUsRUFBQUcsMkJBQUFELEtBQUFFLGdCQUFBTixHQUFBTyxLQUFBSCxPQUVBWixPQUFPQyxRQUFRUSxHQUFhUCxRQUFRLFNBQUFjLEdBQzdCQyxHQUFBQSxHQUFBQSxFQUFKLEdBQ0lDLEVBREFELEVBQ0osRUFFREMsR0FBa0JoQixRQUFRLFNBQUFpQixHQUN4QlQsRUFBQVUsSUFBQSxJQUFBQyxPQUFBSixFQUFBLEtBQUFJLE9BQWFKLEVBQWJBLEtBQUEsaUJBQUEsV0FBQSxHQUFBSyxHQUFBQyxrQkFBQUMsbUJBQUFDLEtBQWdDUixRQUFBQSxHQUFoQ1MsRUFBQUMsR0FBZ0NWLEdBQUFBLEdBQUFBLEVBQUFBLEVBQUFBLENBQUFBLE9BQUFBLG9CQUFBQSxLQUFBQSxTQUFBQSxHQUFBQSxPQUFBQSxPQUFBQSxFQUFBQSxLQUFBQSxFQUFBQSxNQUFBQSxJQUFBQSxHQUFBQSxNQUFBQSxHQUFBQSxLQUFBQSxFQUFBQSxFQUV0QlcsRUFGMkNDLE9BRTdCSCxFQUZRVCxFQUVSUyxHQUFBQSxFQUZRVCxFQUVSUyxNQUZRVCxFQUFBQSxLQUFBQSxFQUdURSxFQUFvQlMsS0FBQUEsSUFBQUEsRUFBQUEsZUFBQUEsR0FBQUEsR0FBT0EsRUFBUEUsT0FBa0JBLEVBQWxCQSxNQUFnQ0EsRUFBQUEsVUFBV0MsRUFIdERkLEtBQUFBLEdBR1RFLEVBSFNGLEVBQUFBLEtBSTVCUyxFQUFBQSxPQUFJTSxJQUNKTixFQUFBQSxLQUFBQSxjQUFXL0IsSUFBQUEsRUFBcUJzQyxFQUFQLEdBQWVDLEdBTFpqQixFQUFBQSxLQUFBQSxFQUFBQSxNQUFBQSxLQUFBQSxHQUFBQSxNQUFBQSxHQUFBQSxLQUFBQSxFQUFBQSxFQUFBQSxHQUFBQSxFQUFBQSxNQUFBQSxHQVE1QmtCLFFBQUFBLElBQUFBLDhCQUFBQSxPQUFBbEIsR0FBQWtCLEVBQUFBLElBUjRCbEIsRUFBQUEsT0FBQUEsU0FTckJVLElBVHFCVixLQUFBQSxJQUFBQSxJQUFBQSxNQUFBQSxNQUFBQSxHQUFBQSxTQUFBQSxFQUFBQSxPQUFBQSxFQUFBQSxPQUFoQyxPQUFBLFVBQUFtQixFQUFBQyxHQUFBLE1BQUFmLEdBQUFnQixNQUFBMUIsS0FBQTJCLG9CQVJON0IsMkJBRDRDOEIsV0FBQUEiLCJmaWxlIjoicHJvamVjdGlvblJvdXRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSb3V0ZXIgZnJvbSAna29hLXJvdXRlcic7XG5cbmZ1bmN0aW9uIHN0cmlwTWV0YWRhdGEoZGF0YSkge1xuICBpZiAoZGF0YSAmJiB0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcgJiYgIShkYXRhIGluc3RhbmNlb2YgRGF0ZSkpIHtcbiAgICBkZWxldGUgZGF0YS5faWQ7XG4gICAgZGVsZXRlIGRhdGEuX192O1xuICAgIE9iamVjdC5lbnRyaWVzKGRhdGEpLmZvckVhY2goKHsgWzFdOiBpIH0pID0+IHN0cmlwTWV0YWRhdGEoaSkpO1xuICB9XG4gIHJldHVybiBkYXRhO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9qZWN0aW9uUm91dGVyIGV4dGVuZHMgUm91dGVyIHtcbiAgY29uc3RydWN0b3IocHJvamVjdGlvbnMpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgT2JqZWN0LmVudHJpZXMocHJvamVjdGlvbnMpLmZvckVhY2goKHtcbiAgICAgIFswXTogbmFtZSxcbiAgICAgIFsxXTogY2xpZW50UHJvamVjdGlvbnNcbiAgICB9KSA9PiB7XG4gICAgICBjbGllbnRQcm9qZWN0aW9ucy5mb3JFYWNoKHByb2plY3Rpb24gPT4ge1xuICAgICAgICB0aGlzLmdldChgLyR7bmFtZX0vJHtwcm9qZWN0aW9uLm5hbWV9LzppZD8vOmZhY2V0P2AsIGFzeW5jIChjdHgsIG5leHQpID0+IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IHsgaWQsIGZhY2V0IH0gPSBjdHgucGFyYW1zO1xuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHByb2plY3Rpb24udmlldy5nZXQoaWQgPyB7IGlkLCAuLi5jdHgucXVlcnkgfSA6IGN0eC5xdWVyeSwgY3R4LiRpZGVudGl0eSwgZmFjZXQpO1xuICAgICAgICAgICAgY3R4LnN0YXR1cyA9IDIwMDtcbiAgICAgICAgICAgIGN0eC5ib2R5ID0gc3RyaXBNZXRhZGF0YShpZCAmJiAhZmFjZXQgPyByZXN1bHRbMF0gOiByZXN1bHQpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYEZhaWxlZCBsb2FkaW5nIHByb2plY3Rpb24gLyR7bmFtZX1gLCBlKTtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG4iXX0=
