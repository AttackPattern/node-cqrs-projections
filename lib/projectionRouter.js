"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _asyncToGenerator(t){return function(){var e=this,r=arguments;return new Promise(function(n,o){function a(t,e){try{var r=c[t](e),a=r.value}catch(t){return void o(t)}r.done?n(a):Promise.resolve(a).then(i,u)}function i(t){a("next",t)}function u(t){a("throw",t)}var c=t.apply(e,r);i()})}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(e&&("object"===_typeof(e)||"function"==typeof e))return e;if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function _objectWithoutProperties(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function stripMetadata(t){if("object"!==_typeof(t)||t instanceof Date)return t;var e=(t._id,t.__v,_objectWithoutProperties(t,["_id","__v"]));return Object.entries(e).reduce(function(t,e){var r=e[0],n=e[1];return t[r]=stripMetadata(n),t},{})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _koaRouter=_interopRequireDefault(require("koa-router")),ProjectionRouter=function(t){function e(t){var r;return _classCallCheck(this,e),r=_possibleConstructorReturn(this,(e.__proto__||Object.getPrototypeOf(e)).call(this)),Object.entries(t).map(function(t){var e=t[0],n=t[1];n.forEach(function(t){r.get("/".concat(e,"/").concat(t.name()),function(){var r=_asyncToGenerator(regeneratorRuntime.mark(function r(n,o){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.get(n.query,n.$identity);case 3:return a=r.sent,n.status=200,r.abrupt("return",n.body=stripMetadata(Array.isArray(a)&&a.length?a[0]:a));case 8:return r.prev=8,r.t0=r.catch(0),console.log("Failed loading projection /".concat(e),r.t0),r.abrupt("return",o());case 12:case"end":return r.stop()}},r,this,[[0,8]])}));return function(t,e){return r.apply(this,arguments)}}()).get("/".concat(e,"/").concat(t.name(),"/:id"),function(){var r=_asyncToGenerator(regeneratorRuntime.mark(function r(n,o){var a,i;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,a=n.params.id,r.next=4,t.getById(a,n.$identity);case 4:i=r.sent,n.body=stripMetadata(Array.isArray(i)&&i.length?i[0]:i),n.status=200,r.next=13;break;case 9:return r.prev=9,r.t0=r.catch(0),console.log("Failed loading projection /".concat(e),r.t0),r.abrupt("return",o());case 13:case"end":return r.stop()}},r,this,[[0,9]])}));return function(t,e){return r.apply(this,arguments)}}())})}),r}return _inherits(e,t),e}(_koaRouter.default);exports.default=ProjectionRouter;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3Rpb25Sb3V0ZXIuanMiXSwibmFtZXMiOlsic3RyaXBNZXRhZGF0YSIsImRhdGEiLCJfdHlwZW9mIiwiX192Iiwic3RyaXBwZWQiLCJfaWQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwicmVkdWNlIiwicmVzdWx0IiwiX3JlZiIsImtleSIsInZhbHVlIiwiX2tvYVJvdXRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiUHJvamVjdGlvblJvdXRlciIsInByb2plY3Rpb25zIiwiX3RoaXMiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsImNhbGwiLCJtYXAiLCJfcmVmMiIsIm5hbWUiLCJmb3JFYWNoIiwicHJvamVjdGlvbiIsImdldCIsImNvbmNhdCIsIl9yZWYzIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwibmV4dCIsInF1ZXJ5IiwiY3R4IiwiJGlkZW50aXR5Iiwic3RhdHVzIiwiQXJyYXkiLCJjb25zb2xlIiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9yZWY0IiwiaWQiLCJwYXJhbXMiLCJnZXRCeUlkIiwiYm9keSIsImlzQXJyYXkiLCJsZW5ndGgiLCJfeDMiLCJfeDQiXSwibWFwcGluZ3MiOiIraURBRUEsUUFBU0EsZUFBY0MsR0FDckIsR0FBSSxXQUFBQyxRQUFBRCxJQUFBQSxZQUE0QkEsTUFDOUIsTUFBT0EsRUFGa0IsSUFNZEUsSUFBUUMsRUFOTUMsSUFNTkQsRUFBYUgsSUFOUEsseUJBTU5GLEdBTk0sTUFBQSxRQVEzQixPQUFPRyxRQUFPQyxRQUFRSixHQUNuQkssT0FBTyxTQUFBQyxFQUFBQyxHQUFzQyxHQUF0Q0MsR0FBc0NELEVBQXJDRCxHQUFlRSxFQUFzQkQsRUFBQSxFQUU1QyxPQURBRCxHQUFPRSxHQUFPWixjQUFjYSxHQUNyQkgsb0ZBYmIsSUFBQUksWUFBQUMsdUJBQUFDLFFBQUEsZUFpQnFCQyw2QkFDbkIsUUFBQUEsR0FBQUMsR0FBQSxHQUFBQyxFQUFBLE9BQUFDLGlCQUFBQyxLQUFBSixHQUNFRSxFQUFBRywyQkFBQUQsTUFBQUosRUFBQU0sV0FBQWhCLE9BQUFpQixlQUFBUCxJQUFBUSxLQUFBSixPQUVBZCxPQUFPQyxRQUFRVSxHQUFhUSxJQUFJLFNBQUFDLEdBQ3pCQyxHQUFBQSxHQUFBQSxFQUFKLEdBQ0lWLEVBREFVLEVBQ0osRUFFRFYsR0FBWVcsUUFBUSxTQUFBQyxHQUNsQlgsRUFBQVksSUFBQSxJQUFBQyxPQUFBSixFQUFBLEtBQUFJLE9BQWFKLEVBQWJBLFFBQUEsV0FBQSxHQUFBSyxHQUFBQyxrQkFBQUMsbUJBQUFDLEtBQXFCTixRQUFBQSxHQUFBQSxFQUFBTyxHQUFBUCxHQUFBQSxFQUFBQSxPQUFBQSxvQkFBQUEsS0FBQUEsU0FBQUEsR0FBQUEsT0FBQUEsT0FBQUEsRUFBQUEsS0FBQUEsRUFBQUEsTUFBQUEsSUFBQUEsR0FBQUEsTUFBQUEsR0FBQUEsS0FBQUEsRUFBQUEsRUFBQUEsS0FBQUEsRUFFRUEsRUFBbUJRLElBQW5CQyxFQUEwQkEsTUFBSUMsRUFBOUJBLFVBRkZWLEtBQUFBLEdBQUFBLE1BRUVBLEdBRkZBLEVBQUFBLEtBR2pCUyxFQUFBQSxPQUFJRSxJQUhhWCxFQUFBQSxPQUFBQSxTQUlWUyxFQUFBQSxLQUFBdkMsY0FBV0EsTUFBYzBDLFFBQUFoQyxJQUFBQSxFQUF5QkEsT0FBekJBLEVBQXlDQSxHQUF6Q0EsR0FKZm9CLEtBQUFBLEdBQUFBLE1BQUFBLEdBQUFBLEtBQUFBLEVBQUFBLEVBQUFBLEdBQUFBLEVBQUFBLE1BQUFBLEdBT2pCYSxRQUFBQSxJQUFBQSw4QkFBQUEsT0FBQWYsR0FBQWUsRUFBQUEsSUFQaUJiLEVBQUFBLE9BQUFBLFNBUVZPLElBUlVQLEtBQUFBLElBQUFBLElBQUFBLE1BQUFBLE1BQUFBLEdBQUFBLFNBQUFBLEVBQUFBLE9BQUFBLEVBQUFBLE9BQXJCLE9BQUEsVUFBQWMsRUFBQUMsR0FBQSxNQUFBWixHQUFBYSxNQUFBekIsS0FBQTBCLGdCQUFBaEIsSUFBQSxJQUFBQyxPQUFBSixFQUFBLEtBQUFJLE9BQUFGLEVBQUFGLE9BQUEsUUFBQSxXQUFBLEdBQUFvQixHQUFBZCxrQkFBQUMsbUJBQUFDLEtBVzhCUixRQUFBQSxHQVg5QlcsRUFBQUYsR0FXOEJULEdBQUFBLEdBQUFBLENBQUFBLE9BQUFBLG9CQUFBQSxLQUFBQSxTQUFBQSxHQUFBQSxPQUFBQSxPQUFBQSxFQUFBQSxLQUFBQSxFQUFBQSxNQUFBQSxJQUFBQSxHQUFBQSxNQUFBQSxHQUFBQSxLQUFBQSxFQUVwQnFCLEVBRmtDVixFQUU3QkEsT0FBSVcsR0FGV3RCLEVBQUFBLEtBQUFBLEVBR011QixFQUFYQSxRQUEyQlgsRUFBQUEsRUFIUkEsVUFBZFosS0FBQUEsR0FHTEUsRUFIS0YsRUFBQUEsS0FJeEJXLEVBQUFBLEtBQUlhLGNBQU9wRCxNQUFjMEMsUUFBTVcsSUFBUTNDLEVBQVdBLE9BQU80QyxFQUFTNUMsR0FBQUEsR0FDbEU2QixFQUFBQSxPQUFJRSxJQUxvQmIsRUFBQUEsS0FBQUEsRUFBQUEsTUFBQUEsS0FBQUEsR0FBQUEsTUFBQUEsR0FBQUEsS0FBQUEsRUFBQUEsRUFBQUEsR0FBQUEsRUFBQUEsTUFBQUEsR0FReEJlLFFBQUFBLElBQUFBLDhCQUFBQSxPQUFBZixHQUFBZSxFQUFBQSxJQVJ3QmYsRUFBQUEsT0FBQUEsU0FTakJTLElBVGlCVCxLQUFBQSxJQUFBQSxJQUFBQSxNQUFBQSxNQUFBQSxHQUFBQSxTQUFBQSxFQUFBQSxPQUFBQSxFQUFBQSxPQVg5QixPQUFBLFVBQUEyQixFQUFBQyxHQUFBLE1BQUFSLEdBQUFGLE1BQUF6QixLQUFBMEIsb0JBUk41QiIsImZpbGUiOiJwcm9qZWN0aW9uUm91dGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJvdXRlciBmcm9tICdrb2Etcm91dGVyJztcblxuZnVuY3Rpb24gc3RyaXBNZXRhZGF0YShkYXRhKSB7XG4gIGlmICh0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcgfHwgZGF0YSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIC8vIFRPRE8gKGJyZXR0KSAtIFRoaXMgaXMgbWVzc2luZyB1cCBhcnJheXNcbiAgY29uc3QgeyBfaWQsIF9fdiwgLi4uc3RyaXBwZWQgfSA9IGRhdGE7XG5cbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHN0cmlwcGVkKVxuICAgIC5yZWR1Y2UoKHJlc3VsdCwgeyBbMF06IGtleSwgWzFdOiB2YWx1ZSB9KSA9PiB7XG4gICAgICByZXN1bHRba2V5XSA9IHN0cmlwTWV0YWRhdGEodmFsdWUpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LCB7fSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2plY3Rpb25Sb3V0ZXIgZXh0ZW5kcyBSb3V0ZXIge1xuICBjb25zdHJ1Y3Rvcihwcm9qZWN0aW9ucykge1xuICAgIHN1cGVyKCk7XG5cbiAgICBPYmplY3QuZW50cmllcyhwcm9qZWN0aW9ucykubWFwKCh7XG4gICAgICBbMF06IG5hbWUsXG4gICAgICBbMV06IHByb2plY3Rpb25zXG4gICAgfSkgPT4ge1xuICAgICAgcHJvamVjdGlvbnMuZm9yRWFjaChwcm9qZWN0aW9uID0+IHtcbiAgICAgICAgdGhpcy5nZXQoYC8ke25hbWV9LyR7cHJvamVjdGlvbi5uYW1lKCl9YCwgYXN5bmMgKGN0eCwgbmV4dCkgPT4ge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgcHJvamVjdGlvbi5nZXQoY3R4LnF1ZXJ5LCBjdHguJGlkZW50aXR5KTtcbiAgICAgICAgICAgIGN0eC5zdGF0dXMgPSAyMDA7XG4gICAgICAgICAgICByZXR1cm4gY3R4LmJvZHkgPSBzdHJpcE1ldGFkYXRhKEFycmF5LmlzQXJyYXkocmVzdWx0KSAmJiByZXN1bHQubGVuZ3RoID8gcmVzdWx0WzBdIDogcmVzdWx0KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBGYWlsZWQgbG9hZGluZyBwcm9qZWN0aW9uIC8ke25hbWV9YCwgZSk7XG4gICAgICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgICAuZ2V0KGAvJHtuYW1lfS8ke3Byb2plY3Rpb24ubmFtZSgpfS86aWRgLCBhc3luYyAoY3R4LCBuZXh0KSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBsZXQgaWQgPSBjdHgucGFyYW1zLmlkO1xuICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgcHJvamVjdGlvbi5nZXRCeUlkKGlkLCBjdHguJGlkZW50aXR5KTtcbiAgICAgICAgICAgICAgY3R4LmJvZHkgPSBzdHJpcE1ldGFkYXRhKEFycmF5LmlzQXJyYXkocmVzdWx0KSAmJiByZXN1bHQubGVuZ3RoID8gcmVzdWx0WzBdIDogcmVzdWx0KTtcbiAgICAgICAgICAgICAgY3R4LnN0YXR1cyA9IDIwMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBGYWlsZWQgbG9hZGluZyBwcm9qZWN0aW9uIC8ke25hbWV9YCwgZSk7XG4gICAgICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIl19
