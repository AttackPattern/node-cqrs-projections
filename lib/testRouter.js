"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _koaRouter=_interopRequireDefault(require("koa-router")),_v=_interopRequireDefault(require("uuid/v4"));function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function asyncGeneratorStep(t,e,r,n,o,u,a){try{var i=t[u](a),s=i.value}catch(t){return void r(t)}i.done?e(s):Promise.resolve(s).then(n,o)}function _asyncToGenerator(i){return function(){var t=this,a=arguments;return new Promise(function(e,r){var n=i.apply(t,a);function o(t){asyncGeneratorStep(n,e,r,o,u,"next",t)}function u(t){asyncGeneratorStep(n,e,r,o,u,"throw",t)}o(void 0)})}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var TestRouter=function(t){function e(o,u){var t;return _classCallCheck(this,e),(t=_possibleConstructorReturn(this,_getPrototypeOf(e).call(this))).get("/reset",function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function t(e){var r,n;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if("resetting"===(r=u.getState()))return e.status=200,t.abrupt("return",e.body="Reset already in progress");t.next=6;break;case 6:if("starting"===r)return e.status=503,t.abrupt("return",e.body="Projections are still being built");t.next=9;break;case 9:return n=(0,_v.default)(),t.next=12,Promise.all(o.map(function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(t.t0=e.reset,t.t0)return t.next=4,e.reset(n);t.next=5;break;case 4:t.t0=t.sent;case 5:return t.abrupt("return",t.t0);case 6:case"end":return t.stop()}},t)}));return function(t){return e.apply(this,arguments)}}()));case 12:return t.next=14,u.reset(n);case 14:return e.status=200,t.abrupt("return",e.body="Reset all projections and state");case 16:case"end":return t.stop()}},t)}));return function(t){return e.apply(this,arguments)}}()),t.get("/version",function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return e.status=200,t.abrupt("return",e.body="Projection with subscriber dependency");case 2:case"end":return t.stop()}},t)}));return function(t){return e.apply(this,arguments)}}()),t.get("/health",function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=u.getState(),t.next="starting"===t.t0?3:5;break;case 3:return e.status=503,t.abrupt("return",e.body="Projections is building");case 5:return e.status=200,t.abrupt("return",e.body="Projection with subscriber dependency");case 7:case"end":return t.stop()}},t)}));return function(t){return e.apply(this,arguments)}}()),t}return _inherits(e,_koaRouter.default),e}();exports.default=TestRouter;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RSb3V0ZXIuanMiXSwibmFtZXMiOlsiX2tvYVJvdXRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3YiLCJUZXN0Um91dGVyIiwic3RvcmVzIiwic3FsRXZlbnRGZWVkIiwiX3RoaXMiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfZ2V0UHJvdG90eXBlT2YiLCJjYWxsIiwiZ2V0IiwiX3JlZiIsIl9hc3luY1RvR2VuZXJhdG9yIiwicmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUyIiwiY3R4Iiwic3RhdGUiLCJrZXkiLCJ3cmFwIiwiX2NvbnRleHQyIiwicHJldiIsIm5leHQiLCJnZXRTdGF0ZSIsInN0YXR1cyIsImFicnVwdCIsImJvZHkiLCJkZWZhdWx0IiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsIl9yZWYyIiwiX2NhbGxlZSIsInAiLCJfY29udGV4dCIsInQwIiwicmVzZXQiLCJzZW50Iiwic3RvcCIsIl94MiIsImFwcGx5IiwiYXJndW1lbnRzIiwiX3giLCJfcmVmMyIsIl9jYWxsZWUzIiwiX2NvbnRleHQzIiwiX3gzIiwiX3JlZjQiLCJfY2FsbGVlNCIsIl9jb250ZXh0NCIsIl94NCIsIlJvdXRlciJdLCJtYXBwaW5ncyI6IjJGQUFBLElBQUFBLFdBQUFDLHVCQUFBQyxRQUFBLGVBQ0FDLEdBQUFGLHVCQUFBQyxRQUFBLDRrREFFcUJFLHVCQUVqQixTQUFBQSxFQUFZQyxFQUFRQyxHQUFjLElBQUFDLEVBQUEsT0FBQUMsZ0JBQUFDLEtBQUFMLElBQ2xDRyxFQUFBRywyQkFBQUQsS0FBQUUsZ0JBQUFQLEdBQUFRLEtBQUFILFFBRUtJLElBQUksU0FBVCxXQUFBLElBQUFDLEVBQUFDLGtCQUFBQyxtQkFBQUMsS0FBbUIsU0FBQUMsRUFBTUMsR0FBTixJQUFBQyxFQUFBQyxFQUFBLE9BQUFMLG1CQUFBTSxLQUFBLFNBQUFDLEdBQUEsT0FBQSxPQUFB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b250ZW50IjpbImltcG9ydCBSb3V0ZXIgZnJvbSAna29hLXJvdXRlcic7XG5pbXBvcnQgdXVpZFY0IGZyb20gJ3V1aWQvdjQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXN0Um91dGVyIGV4dGVuZHMgUm91dGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKHN0b3Jlcywgc3FsRXZlbnRGZWVkKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuZ2V0KCcvcmVzZXQnLCBhc3luYyBjdHggPT4ge1xuICAgICAgY29uc3Qgc3RhdGUgPSBzcWxFdmVudEZlZWQuZ2V0U3RhdGUoKTtcbiAgICAgIGlmIChzdGF0ZSA9PT0gJ3Jlc2V0dGluZycpIHtcbiAgICAgICAgY3R4LnN0YXR1cyA9IDIwMDtcbiAgICAgICAgcmV0dXJuIGN0eC5ib2R5ID0gJ1Jlc2V0IGFscmVhZHkgaW4gcHJvZ3Jlc3MnO1xuICAgICAgfSBlbHNlIGlmIChzdGF0ZSA9PT0gJ3N0YXJ0aW5nJykge1xuICAgICAgICBjdHguc3RhdHVzID0gNTAzO1xuICAgICAgICByZXR1cm4gY3R4LmJvZHkgPSAnUHJvamVjdGlvbnMgYXJlIHN0aWxsIGJlaW5nIGJ1aWx0JztcbiAgICAgIH1cbiAgICAgIC8vIGdlbmVyYXRlIGEgbmV3IGFjdGl2ZSBzdGF0ZSBrZXkgdG8gc3dhcCBvdXIgcHJvamVjdGlvbiB3cml0ZXMgb3ZlciB0b1xuICAgICAgY29uc3Qga2V5ID0gdXVpZFY0KCk7XG4gICAgICAvLyBoYXZlIGFsbCBzdG9yZXMgc3dpdGNoIHRoZWlyIHdyaXRlIG1vZGVsIG92ZXIgdG8gdGhlIG5ldyBrZXlcbiAgICAgIGF3YWl0IFByb21pc2UuYWxsKHN0b3Jlcy5tYXAoYXN5bmMgcCA9PiBwLnJlc2V0ICYmIGF3YWl0IHAucmVzZXQoa2V5KSkpO1xuICAgICAgLy8gcmVzZXQgdGhlIGJvb2ttYXJrIGFuZCBzdGFydCByZWJ1aWxkaW5nIHByb2plY3Rpb25zIG9uIHRoZSBuZXcgYm9va21hcmtcbiAgICAgIGF3YWl0IHNxbEV2ZW50RmVlZC5yZXNldChrZXkpO1xuXG4gICAgICBjdHguc3RhdHVzID0gMjAwO1xuICAgICAgcmV0dXJuIGN0eC5ib2R5ID0gJ1Jlc2V0IGFsbCBwcm9qZWN0aW9ucyBhbmQgc3RhdGUnO1xuICAgIH0pO1xuXG4gICAgdGhpcy5nZXQoJy92ZXJzaW9uJywgYXN5bmMgY3R4ID0+IHtcbiAgICAgIGN0eC5zdGF0dXMgPSAyMDA7XG4gICAgICByZXR1cm4gY3R4LmJvZHkgPSAnUHJvamVjdGlvbiB3aXRoIHN1YnNjcmliZXIgZGVwZW5kZW5jeSc7XG4gICAgfSk7XG4gICAgdGhpcy5nZXQoJy9oZWFsdGgnLCBhc3luYyBjdHggPT4ge1xuICAgICAgc3dpdGNoIChzcWxFdmVudEZlZWQuZ2V0U3RhdGUoKSkge1xuICAgICAgICBjYXNlICdzdGFydGluZyc6XG4gICAgICAgICAgY3R4LnN0YXR1cyA9IDUwMztcbiAgICAgICAgICByZXR1cm4gY3R4LmJvZHkgPSAnUHJvamVjdGlvbnMgaXMgYnVpbGRpbmcnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGN0eC5zdGF0dXMgPSAyMDA7XG4gICAgICAgICAgcmV0dXJuIGN0eC5ib2R5ID0gJ1Byb2plY3Rpb24gd2l0aCBzdWJzY3JpYmVyIGRlcGVuZGVuY3knO1xuICAgICAgfVxuXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==
