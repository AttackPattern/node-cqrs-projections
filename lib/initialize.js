"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _authTokenMapper=_interopRequireDefault(require("./authTokenMapper")),_identityMiddleware=_interopRequireDefault(require("./identityMiddleware")),_projectionRouter=_interopRequireDefault(require("./projectionRouter")),_testRouter=_interopRequireDefault(require("./testRouter")),_sqlProjectionState=_interopRequireDefault(require("./sqlProjectionState")),_sqlEventFeed=_interopRequireDefault(require("./sqlEventFeed")),_projectionStore=_interopRequireDefault(require("./projectionStore")),_identity=_interopRequireDefault(require("./identity"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,t,r,n,i,o,u){try{var a=e[o](u),c=a.value}catch(e){return void r(e)}a.done?t(c):Promise.resolve(c).then(n,i)}function _asyncToGenerator(a){return function(){var e=this,u=arguments;return new Promise(function(t,r){var n=a.apply(e,u);function i(e){asyncGeneratorStep(n,t,r,i,o,"next",e)}function o(e){asyncGeneratorStep(n,t,r,i,o,"throw",e)}i(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Projections=function e(){_classCallCheck(this,e)};_defineProperty(exports.default=Projections,"initialize",function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var i,r,n,o,u,a,c,s,l,f,p,d;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return i=t.container,r=t.config,n=t.db,o=t.storeFolder,u=t.viewFolder,a=t.identityMapper,c=void 0===a?function(e){return new _identity.default(e)}:a,i.register("db",function(){return n}),e.next=4,(0,_projectionStore.default)(r("connections").mongoUrl);case 4:return s=new _sqlProjectionState.default,e.next=7,s.getActiveKey();case 7:if(l=e.sent,f=Object.entries(o).reduce(function(e,t){var r=t[0],n=t[1];return e[r]=i.resolve(n),e},{}),p=Object.entries(u).reduce(function(e,t){var r=t[0],n=t[1];return e[r]=Object.entries(n).map(function(e){var t=e[0],r=e[1];return{name:t,view:i.resolve(r,[f])}}),e},{}),d=new _sqlEventFeed.default({db:n,projectionState:s,stores:Object.values(f)}),l)return e.next=14,Promise.all(Object.values(f).map(function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.t0=t.reset,e.t0)return e.next=4,t.reset(l);e.next=5;break;case 4:e.t0=e.sent;case 5:return e.abrupt("return",e.t0);case 6:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}()));e.next=14;break;case 14:return Object.values(f).filter(function(e){return e.onEvent}).forEach(function(t){return d.subscribe(function(e){return t.onEvent(e)})}),e.abrupt("return",{routers:{projection:new _projectionRouter.default(p),test:new _testRouter.default(Object.values(f),d)},middleware:{identity:new _identityMiddleware.default(new _authTokenMapper.default({secret:r.decrypt(r("authentication").secret),identityMapper:c})).inject},stores:f,views:p});case 16:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXRpYWxpemUuanMiXSwibmFtZXMiOlsiX2F1dGhUb2tlbk1hcHBlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2lkZW50aXR5TWlkZGxld2FyZSIsIl9wcm9qZWN0aW9uUm91dGVyIiwiX3Rlc3RSb3V0ZXIiLCJfc3FsUHJvamVjdGlvblN0YXRlIiwiX3NxbEV2ZW50RmVlZCIsIl9wcm9qZWN0aW9uU3RvcmUiLCJfaWRlbnRpdHkiLCJQcm9qZWN0aW9ucyIsIl9jYWxsZWUyIiwiX3JlZiIsImNvbnRhaW5lciIsImNvbmZpZyIsImRiIiwic3RvcmVGb2xkZXIiLCJ2aWV3Rm9sZGVyIiwiX3JlZiRpZGVudGl0eU1hcHBlciIsImlkZW50aXR5TWFwcGVyIiwicHJvamVjdGlvblN0YXRlIiwia2V5Iiwic3RvcmVzIiwidmlld3MiLCJzcWxFdmVudEZlZWQiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJ3cmFwIiwiX2NvbnRleHQyIiwicHJldiIsIm5leHQiLCJ0b2tlbiIsIklkZW50aXR5IiwicmVnaXN0ZXIiLCJkZWZhdWx0IiwibW9uZ29VcmwiLCJTcWxQcm9qZWN0aW9uU3RhdGUiLCJnZXRBY3RpdmVLZXkiLCJzZW50IiwiT2JqZWN0IiwiZW50cmllcyIsInJlZHVjZSIsInJlc3VsdCIsIl9yZWYzIiwibmFtZSIsIlN0b3JlIiwicmVzb2x2ZSIsIl9yZWY0IiwiY2xpZW50IiwiY2xpZW50Vmlld3MiLCJtYXAiLCJfcmVmNSIsIlZpZXciLCJ2aWV3IiwiU3FsRXZlbnRGZWVkIiwidmFsdWVzIiwiUHJvbWlzZSIsImFsbCIsIl9yZWY2IiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJtYXJrIiwiX2NhbGxlZSIsInAiLCJfY29udGV4dCIsInQwIiwicmVzZXQiLCJhYnJ1cHQiLCJzdG9wIiwiX3gyIiwiYXBwbHkiLCJ0aGlzIiwiYXJndW1lbnRzIiwiZmlsdGVyIiwic3RvcmUiLCJvbkV2ZW50IiwiZm9yRWFjaCIsInN1YnNjcmliZSIsImUiLCJyb3V0ZXJzIiwicHJvamVjdGlvbiIsIlByb2plY3Rpb25Sb3V0ZXIiLCJ0ZXN0IiwiVGVzdFJvdXRlciIsImlkZW50aXR5IiwiSWRlbnRpdHlNaWRkbGV3YXJlIiwic2VjcmV0IiwiZGVjcnlwdCIsImluamVjdCJdLCJtYXBwaW5ncyI6IjJGQUFBLElBQUFBLGlCQUFBQyx1QkFBQUMsUUFBQSxzQkFDQUMsb0JBQUFGLHVCQUFBQyxRQUFBLHlCQUNBRSxrQkFBQUgsdUJBQUFDLFFBQUEsdUJBQ0FHLFlBQUFKLHVCQUFBQyxRQUFBLGlCQUVBSSxvQkFBQUwsdUJBQUFDLFFBQUEseUJBQ0FLLGNBQUFOLHVCQUFBQyxRQUFBLG1CQUVBTSxpQkFBQVAsdUJBQUFDLFFBQUEsc0JBUEFPLFVBQUFSLHVCQUFBQyxRQUFBLDBzQkFDQVEsc0tBQ0EsU0FBQUMsRUFBQUMsR0FBQSxJQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBLE9BQUFDLG1CQUFBQyxLQUFBLFNBQUFDLEdBQUEsT0FBQSxPQUFBQSxFQUFBQyxLQUFBRCxFQUFBRSxNQUFBLEtBQUEsRUFBQSxPQUFBaEIsRUFBQUQsRUFBQUMsVUFBQUMsRUFBQUYsRUFBQUUsT0FBQUMsRUFBQUgsRUFBQUcsR0FBQUMsRUFBQUosRUFBQUksWUFBQUMsRUFBQUwsRUFBQUssV0FBQUMsRUFBQU4sRUFBQU8sZUFBQUEsT0FBQSxJQUFBRCxFQUFBLFNBQUFZLEdBQUEsT0FBQSxJQUFBQyxVQUFBQSxRQUFBRCxJQUFBWixFQVdJTCxFQUFVbUIsU0FBUyxLQUFNLFdBQUEsT0FBTWpCLElBWG5DWSxFQUFBRSxLQUFBLEdBYVUsRUFBQXJCLGlCQUFBeUIsU0FBZ0JuQixFQUFPLGVBQWVvQixVQWJoRCxLQUFBLEVBQUEsT0FlVWQsRUFBa0IsSUFBSWUsb0JBQUFBLFFBZmhDUixFQUFBRSxLQUFBLEVBaUJzQlQsRUFBZ0JnQixlQWpCdEMsS0FBQSxFQUFBLEdBaUJVZixFQWpCVk0sRUFBQVUsS0FtQlVmLEVBQVNnQixPQUFPQyxRQUFRdkIsR0FDM0J3QixPQUFPLFNBQUNDLEVBQURDLEdBQXVDLElBQXZCQyxFQUF1QkQsRUFBM0IsR0FBZUUsRUFBWUYsRUFBaEIsR0FFN0IsT0FEQUQsRUFBT0UsR0FBUTlCLEVBQVVnQyxRQUFRRCxHQUMxQkgsR0FDTixJQUVDbEIsRUFBUWUsT0FBT0MsUUFBUXRCLEdBQzFCdUIsT0FBTyxTQUFDQyxFQUFESyxHQUErQyxJQUEvQkMsRUFBK0JELEVBQW5DLEdBQWlCRSxFQUFrQkYsRUFBdEIsR0FFL0IsT0FEQUwsRUFBT00sR0FBVVQsT0FBT0MsUUFBUVMsR0FBYUMsSUFBSSxTQUFBQyxHQUFBLElBQVFQLEVBQVJPLEVBQUksR0FBZUMsRUFBbkJELEVBQWUsR0FBZixNQUErQixDQUFFUCxLQUFBQSxFQUFNUyxLQUFNdkMsRUFBVWdDLFFBQVFNLEVBQU0sQ0FBQzdCLE9BQ2hIbUIsR0FDTixJQUVDakIsRUFBZSxJQUFJNkIsY0FBQUEsUUFBYSxDQUNwQ3RDLEdBQUFBLEVBQ0FLLGdCQUFBQSxFQUNBRSxPQUFRZ0IsT0FBT2dCLE9BQU9oQyxLQUdwQkQsRUFyQ1IsT0FBQU0sRUFBQUUsS0FBQSxHQXNDWTBCLFFBQVFDLElBQUlsQixPQUFPZ0IsT0FBT2hDLEdBQVEyQixJQUF0QixXQUFBLElBQUFRLEVBQUFDLGtCQUFBakMsbUJBQUFrQyxLQUEwQixTQUFBQyxFQUFNQyxHQUFOLE9BQUFwQyxtQkFBQUMsS0FBQSxTQUFBb0MsR0FBQSxPQUFBLE9BQUFBLEVBQUFsQyxLQUFBa0MsRUFBQWpDLE1BQUEsS0FBQSxFQUFBLEdBQUFpQyxFQUFBQyxHQUFXRixFQUFFRyxNQUFiRixFQUFBQyxHQUFBLE9BQUFELEVBQUFqQyxLQUFBLEVBQTRCZ0MsRUFBRUcsTUFBTTNDLEdBQXBDeUMsRUFBQWpDLEtBQUEsRUFBQSxNQUFBLEtBQUEsRUFBQWlDLEVBQUFDLEdBQUFELEVBQUF6QixLQUFBLEtBQUEsRUFBQSxPQUFBeUIsRUFBQUcsT0FBQSxTQUFBSCxFQUFBQyxJQUFBLEtBQUEsRUFBQSxJQUFBLE1BQUEsT0FBQUQsRUFBQUksU0FBQU4sTUFBMUIsT0FBQSxTQUFBTyxHQUFBLE9BQUFWLEVBQUFXLE1BQUFDLEtBQUFDLFlBQUEsS0F0Q3hCM0MsRUFBQUUsS0FBQSxHQUFBLE1BQUEsS0FBQSxHQUFBLE9Bd0NJUyxPQUFPZ0IsT0FBT2hDLEdBQVFpRCxPQUFPLFNBQUFDLEdBQUssT0FBSUEsRUFBTUMsVUFBU0MsUUFBUSxTQUFBYixHQUFDLE9BQUlyQyxFQUFhbUQsVUFBVSxTQUFBQyxHQUFDLE9BQUlmLEVBQUVZLFFBQVFHLE9BeEM1R2pELEVBQUFzQyxPQUFBLFNBMkNXLENBakNXWSxRQUFBLENBQUFDLFdBQUEsSUFBQUMsa0JBQUFBLFFBQUF4RCxHQUFBeUQsS0FBQSxJQUFBQyxZQUFBQSxRQUFBM0MsT0FBQWdCLE9BQUFoQyxHQUFBRSxJQUFTWCxXQUFBQSxDQUFzRXFFLFNBQUEsSUFBSUMsb0JBQUFBLFFBQUlwRCxJQUFTRCxpQkFBQUEsUUFBakIsQ0FBQXNELE9BQS9FdEUsRUFBQXVFLFFBQUF2RSxFQUFBLGtCQUFBc0UsUUFDbEJ2RSxlQUFBQSxLQUF5QnlFLFFBRFBoRSxPQUFBQSxFQUFBQyxNQUFBQSxJQVZ0QixLQUFBLEdBQUEsSUFBQSxNQUFBLE9BQUFJLEVBQUF1QyxTQUFBdkQiLCJmaWxlIjoiaW5pdGlhbGl6ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBdXRoVG9rZW5NYXBwZXIgZnJvbSAnLi9hdXRoVG9rZW5NYXBwZXInO1xuaW1wb3J0IElkZW50aXR5TWlkZGxld2FyZSBmcm9tICcuL2lkZW50aXR5TWlkZGxld2FyZSc7XG5pbXBvcnQgUHJvamVjdGlvblJvdXRlciBmcm9tICcuL3Byb2plY3Rpb25Sb3V0ZXInO1xuaW1wb3J0IFRlc3RSb3V0ZXIgZnJvbSAnLi90ZXN0Um91dGVyJztcblxuaW1wb3J0IFNxbFByb2plY3Rpb25TdGF0ZSBmcm9tICcuL3NxbFByb2plY3Rpb25TdGF0ZSc7XG5pbXBvcnQgU3FsRXZlbnRGZWVkIGZyb20gJy4vc3FsRXZlbnRGZWVkJztcblxuaW1wb3J0IHByb2plY3Rpb25TdG9yZSBmcm9tICcuL3Byb2plY3Rpb25TdG9yZSc7XG5pbXBvcnQgSWRlbnRpdHkgZnJvbSAnLi9pZGVudGl0eSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2plY3Rpb25zIHtcblxuICBzdGF0aWMgaW5pdGlhbGl6ZSA9IGFzeW5jICh7IGNvbnRhaW5lciwgY29uZmlnLCBkYiwgc3RvcmVGb2xkZXIsIHZpZXdGb2xkZXIsIGlkZW50aXR5TWFwcGVyID0gdG9rZW4gPT4gbmV3IElkZW50aXR5KHRva2VuKSB9KSA9PiB7XG4gICAgY29udGFpbmVyLnJlZ2lzdGVyKCdkYicsICgpID0+IGRiKTtcblxuICAgIGF3YWl0IHByb2plY3Rpb25TdG9yZShjb25maWcoJ2Nvbm5lY3Rpb25zJykubW9uZ29VcmwpO1xuXG4gICAgY29uc3QgcHJvamVjdGlvblN0YXRlID0gbmV3IFNxbFByb2plY3Rpb25TdGF0ZSgpO1xuXG4gICAgY29uc3Qga2V5ID0gYXdhaXQgcHJvamVjdGlvblN0YXRlLmdldEFjdGl2ZUtleSgpO1xuXG4gICAgY29uc3Qgc3RvcmVzID0gT2JqZWN0LmVudHJpZXMoc3RvcmVGb2xkZXIpXG4gICAgICAucmVkdWNlKChyZXN1bHQsIHsgWzBdOiBuYW1lLCBbMV06IFN0b3JlIH0pID0+IHtcbiAgICAgICAgcmVzdWx0W25hbWVdID0gY29udGFpbmVyLnJlc29sdmUoU3RvcmUpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSwge30pO1xuXG4gICAgY29uc3Qgdmlld3MgPSBPYmplY3QuZW50cmllcyh2aWV3Rm9sZGVyKVxuICAgICAgLnJlZHVjZSgocmVzdWx0LCB7IFswXTogY2xpZW50LCBbMV06IGNsaWVudFZpZXdzIH0pID0+IHtcbiAgICAgICAgcmVzdWx0W2NsaWVudF0gPSBPYmplY3QuZW50cmllcyhjbGllbnRWaWV3cykubWFwKCh7IFswXTogbmFtZSwgWzFdOiBWaWV3IH0pID0+ICh7IG5hbWUsIHZpZXc6IGNvbnRhaW5lci5yZXNvbHZlKFZpZXcsIFtzdG9yZXNdKSB9KSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LCB7fSk7XG5cbiAgICBjb25zdCBzcWxFdmVudEZlZWQgPSBuZXcgU3FsRXZlbnRGZWVkKHtcbiAgICAgIGRiLFxuICAgICAgcHJvamVjdGlvblN0YXRlLFxuICAgICAgc3RvcmVzOiBPYmplY3QudmFsdWVzKHN0b3JlcylcbiAgICB9KTtcbiAgICAvLyBpZiB3ZSBoYXZlIGFuIGFjdGl2ZSBrZXksIGxldHMgbWFrZSBzdXJlIGFuZCBzd2FwIHRoZSBwcm9qZWN0aW9uIHN0b3JlcyBvdmVyIHRvIHRoZSBrZXllZCB2ZXJzaW9uIG9mIHRoZSBtb2RlbFxuICAgIGlmIChrZXkpIHtcbiAgICAgIGF3YWl0IFByb21pc2UuYWxsKE9iamVjdC52YWx1ZXMoc3RvcmVzKS5tYXAoYXN5bmMgcCA9PiBwLnJlc2V0ICYmIGF3YWl0IHAucmVzZXQoa2V5KSkpO1xuICAgIH1cbiAgICBPYmplY3QudmFsdWVzKHN0b3JlcykuZmlsdGVyKHN0b3JlID0+IHN0b3JlLm9uRXZlbnQpLmZvckVhY2gocCA9PiBzcWxFdmVudEZlZWQuc3Vic2NyaWJlKGUgPT4gcC5vbkV2ZW50KGUpKSk7XG5cblxuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXJzOiB7XG4gICAgICAgIHByb2plY3Rpb246IG5ldyBQcm9qZWN0aW9uUm91dGVyKHZpZXdzKSxcbiAgICAgICAgdGVzdDogbmV3IFRlc3RSb3V0ZXIoT2JqZWN0LnZhbHVlcyhzdG9yZXMpLCBzcWxFdmVudEZlZWQpXG4gICAgICB9LFxuICAgICAgbWlkZGxld2FyZToge1xuICAgICAgICBpZGVudGl0eTogbmV3IElkZW50aXR5TWlkZGxld2FyZShuZXcgQXV0aFRva2VuTWFwcGVyKHtcbiAgICAgICAgICBzZWNyZXQ6IGNvbmZpZy5kZWNyeXB0KGNvbmZpZygnYXV0aGVudGljYXRpb24nKS5zZWNyZXQpLFxuICAgICAgICAgIGlkZW50aXR5TWFwcGVyXG4gICAgICAgIH0pKS5pbmplY3RcbiAgICAgIH0sXG4gICAgICBzdG9yZXMsXG4gICAgICB2aWV3c1xuICAgIH07XG4gIH1cbn1cbiJdfQ==
