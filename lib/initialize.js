"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _authTokenMapper=_interopRequireDefault(require("./authTokenMapper")),_identityMiddleware=_interopRequireDefault(require("./identityMiddleware")),_projectionRouter=_interopRequireDefault(require("./projectionRouter")),_testRouter=_interopRequireDefault(require("./testRouter")),_sqlProjectionState=_interopRequireDefault(require("./sqlProjectionState")),_sqlEventFeed=_interopRequireDefault(require("./sqlEventFeed")),_projectionStore=_interopRequireDefault(require("./projectionStore")),_identity=_interopRequireDefault(require("./identity"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,t,r,n,i,o,u){try{var a=e[o](u),c=a.value}catch(e){return void r(e)}a.done?t(c):Promise.resolve(c).then(n,i)}function _asyncToGenerator(a){return function(){var e=this,u=arguments;return new Promise(function(t,r){var n=a.apply(e,u);function i(e){asyncGeneratorStep(n,t,r,i,o,"next",e)}function o(e){asyncGeneratorStep(n,t,r,i,o,"throw",e)}i(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Projections=function e(){_classCallCheck(this,e)};_defineProperty(exports.default=Projections,"initialize",function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var i,r,n,o,u,a,c,s,l,f,p,d;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return i=t.container,r=t.config,n=t.db,o=t.storeFolder,u=t.viewFolder,a=t.identityMapper,c=void 0===a?function(e){return new _identity.default(e)}:a,i.register("db",function(){return n}),e.next=4,(0,_projectionStore.default)(r("connections").mongoUrl);case 4:return s=new _sqlProjectionState.default,e.next=7,s.getActiveKey();case 7:if(l=e.sent,f=Object.entries(o).reduce(function(e,t){var r=t[0],n=t[1];return e[r]=i.resolve(n),e},{}),p=Object.entries(u).reduce(function(e,t){var r=t[0],n=t[1];return e[r]=Object.entries(n).map(function(e){var t=e[0],r=e[1];return{name:t,view:i.resolve(r,[f])}}),e},{}),d=new _sqlEventFeed.default({db:n,projectionState:s,stores:Object.values(f)}),l)return e.next=14,Promise.all(Object.values(f).map(function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.t0=t.reset,e.t0)return e.next=4,t.reset(l);e.next=4;break;case 4:if(e.t1=t.swap,e.t1)return e.next=8,t.swap();e.next=8;break;case 8:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}()));e.next=14;break;case 14:return Object.values(f).filter(function(e){return e.onEvent}).forEach(function(t){return d.subscribe(function(e){return t.onEvent(e)})}),e.abrupt("return",{routers:{projection:new _projectionRouter.default(p),test:new _testRouter.default(Object.values(f),d)},middleware:{identity:new _identityMiddleware.default(new _authTokenMapper.default({secret:r.decrypt(r("authentication").secret),identityMapper:c})).inject},stores:f,views:p});case 16:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXRpYWxpemUuanMiXSwibmFtZXMiOlsiX2F1dGhUb2tlbk1hcHBlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2lkZW50aXR5TWlkZGxld2FyZSIsIl9wcm9qZWN0aW9uUm91dGVyIiwiX3Rlc3RSb3V0ZXIiLCJfc3FsUHJvamVjdGlvblN0YXRlIiwiX3NxbEV2ZW50RmVlZCIsIl9wcm9qZWN0aW9uU3RvcmUiLCJfaWRlbnRpdHkiLCJQcm9qZWN0aW9ucyIsIl9jYWxsZWUyIiwiX3JlZiIsImNvbnRhaW5lciIsImNvbmZpZyIsImRiIiwic3RvcmVGb2xkZXIiLCJ2aWV3Rm9sZGVyIiwiX3JlZiRpZGVudGl0eU1hcHBlciIsImlkZW50aXR5TWFwcGVyIiwicHJvamVjdGlvblN0YXRlIiwia2V5Iiwic3RvcmVzIiwidmlld3MiLCJzcWxFdmVudEZlZWQiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJ3cmFwIiwiX2NvbnRleHQyIiwicHJldiIsIm5leHQiLCJ0b2tlbiIsIklkZW50aXR5IiwicmVnaXN0ZXIiLCJtb25nb1VybCIsIlNxbFByb2plY3Rpb25TdGF0ZSIsImdldEFjdGl2ZUtleSIsInNlbnQiLCJPYmplY3QiLCJlbnRyaWVzIiwicmVkdWNlIiwicmVzdWx0IiwiX3JlZjMiLCJuYW1lIiwiU3RvcmUiLCJyZXNvbHZlIiwiX3JlZjQiLCJjbGllbnQiLCJjbGllbnRWaWV3cyIsIm1hcCIsIl9yZWY1IiwiVmlldyIsInZpZXciLCJTcWxFdmVudEZlZWQiLCJ2YWx1ZXMiLCJQcm9taXNlIiwiYWxsIiwiX3JlZjYiLCJfYXN5bmNUb0dlbmVyYXRvciIsIm1hcmsiLCJfY2FsbGVlIiwicCIsIl9jb250ZXh0IiwidDAiLCJyZXNldCIsInQxIiwic3dhcCIsInN0b3AiLCJfeDIiLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJmaWx0ZXIiLCJzdG9yZSIsIm9uRXZlbnQiLCJmb3JFYWNoIiwic3Vic2NyaWJlIiwiZSIsImFicnVwdCIsInJvdXRlcnMiLCJQcm9qZWN0aW9uUm91dGVyIiwidGVzdCIsIlRlc3RSb3V0ZXIiLCJpZGVudGl0eSIsIkF1dGhUb2tlbk1hcHBlciIsInNlY3JldCIsImRlY3J5cHQiLCJpbmplY3QiXSwibWFwcGluZ3MiOiIyRkFBQSxJQUFBQSxpQkFBQUMsdUJBQUFDLFFBQUEsc0JBQ0FDLG9CQUFBRix1QkFBQUMsUUFBQSx5QkFDQUUsa0JBQUFILHVCQUFBQyxRQUFBLHVCQUNBRyxZQUFBSix1QkFBQUMsUUFBQSxpQkFFQUksb0JBQUFMLHVCQUFBQyxRQUFBLHlCQUNBSyxjQUFBTix1QkFBQUMsUUFBQSxtQkFFQU0saUJBQUFQLHVCQUFBQyxRQUFBLHNCQVBBTyxVQUFBUix1QkFBQUMsUUFBQSwwc0JBQ0FRLHNLQUNBLFNBQUFDLEVBQUFDLEdBQUEsSUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQSxPQUFBQyxtQkFBQUMsS0FBQSxTQUFBQyxHQUFBLE9BQUEsT0FBQUEsRUFBQUMsS0FBQUQsRUFBQUUsTUFBQSxLQUFBLEVBQUEsT0FBQWhCLEVBQUFELEVBQUFDLFVBQUFDLEVBQUFGLEVBQUFFLE9BQUFDLEVBQUFILEVBQUFHLEdBQUFDLEVBQUFKLEVBQUFJLFlBQUFDLEVBQUFMLEVBQUFLLFdBQUFDLEVBQUFOLEVBQUFPLGVBQUFBLE9BQUEsSUFBQUQsRUFBQSxTQUFBWSxHQUFBLE9BQUEsSUFBQUMsVUFBQUEsUUFBQUQsSUFBQVosRUFXSUwsRUFBVW1CLFNBQVMsS0FBTSxXQUFBLE9BQU1qQixJQVhuQ1ksRUFBQUUsS0FBQSxHQWFVLEVBQUFyQixpQkFBQSxTQUFnQk0sRUFBTyxlQUFlbUIsVUFiaEQsS0FBQSxFQUFBLE9BZVViLEVBQWtCLElBQUljLG9CQUFBQSxRQWZoQ1AsRUFBQUUsS0FBQSxFQWlCc0JULEVBQWdCZSxlQWpCdEMsS0FBQSxFQUFBLEdBaUJVZCxFQWpCVk0sRUFBQVMsS0FtQlVkLEVBQVNlLE9BQU9DLFFBQVF0QixHQUMzQnVCLE9BQU8sU0FBQ0MsRUFBREMsR0FBdUMsSUFBdkJDLEVBQXVCRCxFQUEzQixHQUFlRSxFQUFZRixFQUFoQixHQUU3QixPQURBRCxFQUFPRSxHQUFRN0IsRUFBVStCLFFBQVFELEdBQzFCSCxHQUNOLElBRUNqQixFQUFRYyxPQUFPQyxRQUFRckIsR0FDMUJzQixPQUFPLFNBQUNDLEVBQURLLEdBQStDLElBQS9CQyxFQUErQkQsRUFBbkMsR0FBaUJFLEVBQWtCRixFQUF0QixHQUUvQixPQURBTCxFQUFPTSxHQUFVVCxPQUFPQyxRQUFRUyxHQUFhQyxJQUFJLFNBQUFDLEdBQUEsSUFBUVAsRUFBUk8sRUFBSSxHQUFlQyxFQUFuQkQsRUFBZSxHQUFmLE1BQStCLENBQUVQLEtBQUFBLEVBQU1TLEtBQU10QyxFQUFVK0IsUUFBUU0sRUFBTSxDQUFDNUIsT0FDaEhrQixHQUNOLElBRUNoQixFQUFlLElBQUk0QixjQUFBQSxRQUFhLENBQ3BDckMsR0FBQUEsRUFDQUssZ0JBQUFBLEVBQ0FFLE9BQVFlLE9BQU9nQixPQUFPL0IsS0FHcEJELEVBckNSLE9BQUFNLEVBQUFFLEtBQUEsR0FzQ1l5QixRQUFRQyxJQUFJbEIsT0FBT2dCLE9BQU8vQixHQUFRMEIsSUFBdEIsV0FBQSxJQUFBUSxFQUFBQyxrQkFBQWhDLG1CQUFBaUMsS0FBMEIsU0FBQUMsRUFBTUMsR0FBTixPQUFBbkMsbUJBQUFDLEtBQUEsU0FBQW1DLEdBQUEsT0FBQSxPQUFBQSxFQUFBakMsS0FBQWlDLEVBQUFoQyxNQUFBLEtBQUEsRUFBQSxHQUFBZ0MsRUFBQUMsR0FDMUNGLEVBQUVHLE1BRHdDRixFQUFBQyxHQUFBLE9BQUFELEVBQUFoQyxLQUFBLEVBQ3pCK0IsRUFBRUcsTUFBTTFDLEdBRGlCd0MsRUFBQWhDLEtBQUEsRUFBQSxNQUFBLEtBQUEsRUFBQSxHQUFBZ0MsRUFBQUcsR0FFMUNKLEVBQUVLLEtBRndDSixFQUFBRyxHQUFBLE9BQUFILEVBQUFoQyxLQUFBLEVBRTFCK0IsRUFBRUssT0FGd0JKLEVBQUFoQyxLQUFBLEVBQUEsTUFBQSxLQUFBLEVBQUEsSUFBQSxNQUFBLE9BQUFnQyxFQUFBSyxTQUFBUCxNQUExQixPQUFBLFNBQUFRLEdBQUEsT0FBQVgsRUFBQVksTUFBQUMsS0FBQUMsWUFBQSxLQXRDeEIzQyxFQUFBRSxLQUFBLEdBQUEsTUFBQSxLQUFBLEdBQUEsT0EyQ0lRLE9BQU9nQixPQUFPL0IsR0FBUWlELE9BQU8sU0FBQUMsR0FBSyxPQUFJQSxFQUFNQyxVQUFTQyxRQUFRLFNBQUFkLEdBQUMsT0FBSXBDLEVBQWFtRCxVQUFVLFNBQUFDLEdBQUMsT0FBSWhCLEVBQUVhLFFBQVFHLE9BM0M1R2pELEVBQUFrRCxPQUFBLFNBVXNCLENBQUFDLFFBQUEsQ0FBU2pFLFdBQUFBLElBQVRrRSxrQkFBQUEsUUFBb0JqRSxHQUEyRGtFLEtBQUEsSUFBQUMsWUFBQUEsUUFBUWxELE9BQUFBLE9BQUFBLEdBQVJQLElBQ2pHWCxXQUFBQSxDQUF5QnFFLFNBQUEsSUFBTW5FLG9CQUFBQSxRQUFOLElBQUFvRSxpQkFBQUEsUUFBQSxDQUFBQyxPQUF6QnRFLEVBQUF1RSxRQUFBdkUsRUFBQSxrQkFBQXNFLFFBRGtCakUsZUFBQUEsS0FBQW1FLFFBQUFoRSxPQUFBQSxFQUtaRixNQUFBQSxJQWZWLEtBQUEsR0FBQSxJQUFBLE1BQUEsT0FBQU8sRUFBQXVDLFNBQUF2RCIsImZpbGUiOiJpbml0aWFsaXplLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEF1dGhUb2tlbk1hcHBlciBmcm9tICcuL2F1dGhUb2tlbk1hcHBlcic7XG5pbXBvcnQgSWRlbnRpdHlNaWRkbGV3YXJlIGZyb20gJy4vaWRlbnRpdHlNaWRkbGV3YXJlJztcbmltcG9ydCBQcm9qZWN0aW9uUm91dGVyIGZyb20gJy4vcHJvamVjdGlvblJvdXRlcic7XG5pbXBvcnQgVGVzdFJvdXRlciBmcm9tICcuL3Rlc3RSb3V0ZXInO1xuXG5pbXBvcnQgU3FsUHJvamVjdGlvblN0YXRlIGZyb20gJy4vc3FsUHJvamVjdGlvblN0YXRlJztcbmltcG9ydCBTcWxFdmVudEZlZWQgZnJvbSAnLi9zcWxFdmVudEZlZWQnO1xuXG5pbXBvcnQgcHJvamVjdGlvblN0b3JlIGZyb20gJy4vcHJvamVjdGlvblN0b3JlJztcbmltcG9ydCBJZGVudGl0eSBmcm9tICcuL2lkZW50aXR5JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvamVjdGlvbnMge1xuXG4gIHN0YXRpYyBpbml0aWFsaXplID0gYXN5bmMgKHsgY29udGFpbmVyLCBjb25maWcsIGRiLCBzdG9yZUZvbGRlciwgdmlld0ZvbGRlciwgaWRlbnRpdHlNYXBwZXIgPSB0b2tlbiA9PiBuZXcgSWRlbnRpdHkodG9rZW4pIH0pID0+IHtcbiAgICBjb250YWluZXIucmVnaXN0ZXIoJ2RiJywgKCkgPT4gZGIpO1xuXG4gICAgYXdhaXQgcHJvamVjdGlvblN0b3JlKGNvbmZpZygnY29ubmVjdGlvbnMnKS5tb25nb1VybCk7XG5cbiAgICBjb25zdCBwcm9qZWN0aW9uU3RhdGUgPSBuZXcgU3FsUHJvamVjdGlvblN0YXRlKCk7XG5cbiAgICBjb25zdCBrZXkgPSBhd2FpdCBwcm9qZWN0aW9uU3RhdGUuZ2V0QWN0aXZlS2V5KCk7XG5cbiAgICBjb25zdCBzdG9yZXMgPSBPYmplY3QuZW50cmllcyhzdG9yZUZvbGRlcilcbiAgICAgIC5yZWR1Y2UoKHJlc3VsdCwgeyBbMF06IG5hbWUsIFsxXTogU3RvcmUgfSkgPT4ge1xuICAgICAgICByZXN1bHRbbmFtZV0gPSBjb250YWluZXIucmVzb2x2ZShTdG9yZSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LCB7fSk7XG5cbiAgICBjb25zdCB2aWV3cyA9IE9iamVjdC5lbnRyaWVzKHZpZXdGb2xkZXIpXG4gICAgICAucmVkdWNlKChyZXN1bHQsIHsgWzBdOiBjbGllbnQsIFsxXTogY2xpZW50Vmlld3MgfSkgPT4ge1xuICAgICAgICByZXN1bHRbY2xpZW50XSA9IE9iamVjdC5lbnRyaWVzKGNsaWVudFZpZXdzKS5tYXAoKHsgWzBdOiBuYW1lLCBbMV06IFZpZXcgfSkgPT4gKHsgbmFtZSwgdmlldzogY29udGFpbmVyLnJlc29sdmUoVmlldywgW3N0b3Jlc10pIH0pKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0sIHt9KTtcblxuICAgIGNvbnN0IHNxbEV2ZW50RmVlZCA9IG5ldyBTcWxFdmVudEZlZWQoe1xuICAgICAgZGIsXG4gICAgICBwcm9qZWN0aW9uU3RhdGUsXG4gICAgICBzdG9yZXM6IE9iamVjdC52YWx1ZXMoc3RvcmVzKVxuICAgIH0pO1xuICAgIC8vIGlmIHdlIGhhdmUgYW4gYWN0aXZlIGtleSwgbGV0cyBtYWtlIHN1cmUgYW5kIHN3YXAgdGhlIHByb2plY3Rpb24gc3RvcmVzIG92ZXIgdG8gdGhlIGtleWVkIHZlcnNpb24gb2YgdGhlIG1vZGVsXG4gICAgaWYgKGtleSkge1xuICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoT2JqZWN0LnZhbHVlcyhzdG9yZXMpLm1hcChhc3luYyBwID0+IHtcbiAgICAgICAgcC5yZXNldCAmJiBhd2FpdCBwLnJlc2V0KGtleSk7XG4gICAgICAgIHAuc3dhcCAmJiBhd2FpdCBwLnN3YXAoKTtcbiAgICAgIH0pKTtcbiAgICB9XG4gICAgT2JqZWN0LnZhbHVlcyhzdG9yZXMpLmZpbHRlcihzdG9yZSA9PiBzdG9yZS5vbkV2ZW50KS5mb3JFYWNoKHAgPT4gc3FsRXZlbnRGZWVkLnN1YnNjcmliZShlID0+IHAub25FdmVudChlKSkpO1xuXG5cbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyczoge1xuICAgICAgICBwcm9qZWN0aW9uOiBuZXcgUHJvamVjdGlvblJvdXRlcih2aWV3cyksXG4gICAgICAgIHRlc3Q6IG5ldyBUZXN0Um91dGVyKE9iamVjdC52YWx1ZXMoc3RvcmVzKSwgc3FsRXZlbnRGZWVkKVxuICAgICAgfSxcbiAgICAgIG1pZGRsZXdhcmU6IHtcbiAgICAgICAgaWRlbnRpdHk6IG5ldyBJZGVudGl0eU1pZGRsZXdhcmUobmV3IEF1dGhUb2tlbk1hcHBlcih7XG4gICAgICAgICAgc2VjcmV0OiBjb25maWcuZGVjcnlwdChjb25maWcoJ2F1dGhlbnRpY2F0aW9uJykuc2VjcmV0KSxcbiAgICAgICAgICBpZGVudGl0eU1hcHBlclxuICAgICAgICB9KSkuaW5qZWN0XG4gICAgICB9LFxuICAgICAgc3RvcmVzLFxuICAgICAgdmlld3NcbiAgICB9O1xuICB9XG59XG4iXX0=
