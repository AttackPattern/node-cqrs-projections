"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _authTokenMapper=_interopRequireDefault(require("./authTokenMapper")),_identityMiddleware=_interopRequireDefault(require("./identityMiddleware")),_projectionRouter=_interopRequireDefault(require("./projectionRouter")),_testRouter=_interopRequireDefault(require("./testRouter")),_sqlProjectionState=_interopRequireDefault(require("./sqlProjectionState")),_sqlEventFeed=_interopRequireDefault(require("./sqlEventFeed")),_projectionStore=_interopRequireDefault(require("./projectionStore")),_identity=_interopRequireDefault(require("./identity"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,t,r,n,i,o,u){try{var a=e[o](u),c=a.value}catch(e){return void r(e)}a.done?t(c):Promise.resolve(c).then(n,i)}function _asyncToGenerator(a){return function(){var e=this,u=arguments;return new Promise(function(t,r){var n=a.apply(e,u);function i(e){asyncGeneratorStep(n,t,r,i,o,"next",e)}function o(e){asyncGeneratorStep(n,t,r,i,o,"throw",e)}i(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Projections=function e(){_classCallCheck(this,e)};_defineProperty(exports.default=Projections,"initialize",function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var i,r,n,o,u,a,c,s,l,f,d,p,_;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return i=t.container,r=t.config,n=t.db,o=t.storeFolder,u=t.viewFolder,a=t.identityMapper,c=void 0===a?function(e){return new _identity.default(e)}:a,i.register("db",function(){return n}),e.next=4,(0,_projectionStore.default)(r("connections").mongoUrl);case 4:return s=new _sqlProjectionState.default,e.next=7,s.getActiveKey();case 7:return l=e.sent,f={key:l,state:"running",swap:null},d=Object.entries(o).reduce(function(e,t){var r=t[0],n=t[1];return e[r]=i.resolve(n,{activeKey:l}),e},{}),p=Object.entries(u).reduce(function(e,t){var r=t[0],n=t[1];return e[r]=Object.entries(n).map(function(e){var t=e[0],r=e[1];return{name:t,view:i.resolve(r,[d])}}),e},{}),_=new _sqlEventFeed.default({db:n,projectionState:s,activeState:f}),Object.values(d).filter(function(e){return e.onEvent}).forEach(function(t){return _.subscribe(function(e){return t.onEvent(e)})}),e.abrupt("return",{routers:{projection:new _projectionRouter.default(p),test:new _testRouter.default(Object.values(d),_,f)},middleware:{identity:new _identityMiddleware.default(new _authTokenMapper.default({secret:r.decrypt(r("authentication").secret),identityMapper:c})).inject},stores:d,views:p});case 14:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXRpYWxpemUuanMiXSwibmFtZXMiOlsiX2F1dGhUb2tlbk1hcHBlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2lkZW50aXR5TWlkZGxld2FyZSIsIl9wcm9qZWN0aW9uUm91dGVyIiwiX3Rlc3RSb3V0ZXIiLCJfc3FsUHJvamVjdGlvblN0YXRlIiwiX3NxbEV2ZW50RmVlZCIsIl9wcm9qZWN0aW9uU3RvcmUiLCJfaWRlbnRpdHkiLCJQcm9qZWN0aW9ucyIsIl9jYWxsZWUiLCJfcmVmIiwiY29udGFpbmVyIiwiY29uZmlnIiwiZGIiLCJzdG9yZUZvbGRlciIsInZpZXdGb2xkZXIiLCJfcmVmJGlkZW50aXR5TWFwcGVyIiwiaWRlbnRpdHlNYXBwZXIiLCJwcm9qZWN0aW9uU3RhdGUiLCJrZXkiLCJwcm9qZWN0aW9uQWN0aXZlU3RhdGUiLCJzdG9yZXMiLCJ2aWV3cyIsInNxbEV2ZW50RmVlZCIsInJlZ2VuZXJhdG9yUnVudGltZSIsIndyYXAiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwidG9rZW4iLCJJZGVudGl0eSIsInJlZ2lzdGVyIiwiZGVmYXVsdCIsIm1vbmdvVXJsIiwiU3FsUHJvamVjdGlvblN0YXRlIiwiZ2V0QWN0aXZlS2V5Iiwic2VudCIsInN0YXRlIiwic3dhcCIsIk9iamVjdCIsImVudHJpZXMiLCJyZWR1Y2UiLCJyZXN1bHQiLCJfcmVmMyIsIm5hbWUiLCJTdG9yZSIsInJlc29sdmUiLCJhY3RpdmVLZXkiLCJfcmVmNCIsImNsaWVudCIsImNsaWVudFZpZXdzIiwibWFwIiwiX3JlZjUiLCJWaWV3IiwidmlldyIsIlNxbEV2ZW50RmVlZCIsImFjdGl2ZVN0YXRlIiwidmFsdWVzIiwiZmlsdGVyIiwic3RvcmUiLCJvbkV2ZW50IiwiZm9yRWFjaCIsInAiLCJzdWJzY3JpYmUiLCJlIiwiYWJydXB0Iiwicm91dGVycyIsInByb2plY3Rpb24iLCJQcm9qZWN0aW9uUm91dGVyIiwidGVzdCIsIlRlc3RSb3V0ZXIiLCJtaWRkbGV3YXJlIiwiaWRlbnRpdHkiLCJJZGVudGl0eU1pZGRsZXdhcmUiLCJBdXRoVG9rZW5NYXBwZXIiLCJzZWNyZXQiLCJkZWNyeXB0IiwiaW5qZWN0Iiwic3RvcCJdLCJtYXBwaW5ncyI6IjJGQUFBLElBQUFBLGlCQUFBQyx1QkFBQUMsUUFBQSxzQkFDQUMsb0JBQUFGLHVCQUFBQyxRQUFBLHlCQUNBRSxrQkFBQUgsdUJBQUFDLFFBQUEsdUJBQ0FHLFlBQUFKLHVCQUFBQyxRQUFBLGlCQUVBSSxvQkFBQUwsdUJBQUFDLFFBQUEseUJBQ0FLLGNBQUFOLHVCQUFBQyxRQUFBLG1CQUVBTSxpQkFBQVAsdUJBQUFDLFFBQUEsc0JBUEFPLFVBQUFSLHVCQUFBQyxRQUFBLDBzQkFDQVEsc0tBQ0EsU0FBQUMsRUFBQUMsR0FBQSxJQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBLE9BQUFDLG1CQUFBQyxLQUFBLFNBQUFDLEdBQUEsT0FBQSxPQUFBQSxFQUFBQyxLQUFBRCxFQUFBRSxNQUFBLEtBQUEsRUFBQSxPQUFBakIsRUFBQUQsRUFBQUMsVUFBQUMsRUFBQUYsRUFBQUUsT0FBQUMsRUFBQUgsRUFBQUcsR0FBQUMsRUFBQUosRUFBQUksWUFBQUMsRUFBQUwsRUFBQUssV0FBQUMsRUFBQU4sRUFBQU8sZUFBQUEsT0FBQSxJQUFBRCxFQUFBLFNBQUFhLEdBQUEsT0FBQSxJQUFBQyxVQUFBQSxRQUFBRCxJQUFBYixFQVdJTCxFQUFVb0IsU0FBUyxLQUFNLFdBQUEsT0FBTWxCLElBWG5DYSxFQUFBRSxLQUFBLEdBYVUsRUFBQXRCLGlCQUFBMEIsU0FBZ0JwQixFQUFPLGVBQWVxQixVQWJoRCxLQUFBLEVBQUEsT0FlVWYsRUFBa0IsSUFBSWdCLG9CQUFBQSxRQWZoQ1IsRUFBQUUsS0FBQSxFQWlCc0JWLEVBQWdCaUIsZUFqQnRDLEtBQUEsRUFBQSxPQWlCVWhCLEVBakJWTyxFQUFBVSxLQU1BaEIsRUFBQSxDQUFBRCxJQUFBQSxFQUFBa0IsTUFBQSxVQUFBQyxLQUFBLE1BY1VqQixFQUFTa0IsT0FBT0MsUUFBUTFCLEdBQzNCMkIsT0FBTyxTQUFDQyxFQUFEQyxHQUF1QyxJQUF2QkMsRUFBdUJELEVBQTNCLEdBQWVFLEVBQVlGLEVBQWhCLEdBRTdCLE9BREFELEVBQU9FLEdBQVFqQyxFQUFVbUMsUUFBUUQsRUFBTyxDQUFFRSxVQUFXNUIsSUFDOUN1QixHQUNOLElBRUNwQixFQUFRaUIsT0FBT0MsUUFBUXpCLEdBQzFCMEIsT0FBTyxTQUFDQyxFQUFETSxHQUErQyxJQUEvQkMsRUFBK0JELEVBQW5DLEdBQWlCRSxFQUFrQkYsRUFBdEIsR0FFL0IsT0FEQU4sRUFBT08sR0FBVVYsT0FBT0MsUUFBUVUsR0FBYUMsSUFBSSxTQUFBQyxHQUFBLElBQVFSLEVBQVJRLEVBQUksR0FBZUMsRUFBbkJELEVBQWUsR0FBZixNQUErQixDQUFFUixLQUFBQSxFQUFNVSxLQUFNM0MsRUFBVW1DLFFBQVFPLEVBQU0sQ0FBQ2hDLE9BQ2hIcUIsR0FyQk1sQyxJQXdCWGUsRUFBZSxJQUFJZ0MsY0FBQUEsUUFBYSxDQUNwQzFDLEdBQUFBLEVBQ0FLLGdCQUFBQSxFQUNBc0MsWUFBYXBDLElBRWZtQixPQUFPa0IsT0FBT3BDLEdBQVFxQyxPQUFPLFNBQUFDLEdBQUssT0FBSUEsRUFBTUMsVUFBU0MsUUFBUSxTQUFBQyxHQUFDLE9BQUl2QyxFQUFhd0MsVUFBVSxTQUFBQyxHQUFDLE9BQUlGLEVBQUVGLFFBQVFJLE9BckM1R3RDLEVBQUF1QyxPQUFBLFNBd0NXLENBQ0xDLFFBQVMsQ0EvQk9DLFdBQUEsSUFBQUMsa0JBQUFBLFFBQUE5QyxHQWlDZCtDLEtBQU0sSUFBSUMsWUFBQUEsUUFBVy9CLE9BQU9rQixPQUFPcEMsR0FBU0UsRUFBY0gsSUFqQzVDbUQsV0FBQSxDQUFBQyxTQUFBLElBQUFDLG9CQUFBQSxRQUFBLElBQUFDLGlCQUFBQSxRQUFBLENBQUFDLE9BQUEvRCxFQUFBZ0UsUUFBQWhFLEVBQUEsa0JBQUErRCxRQUFTaEUsZUFBQUEsS0FBc0VrRSxRQUNqR2xFLE9BQUFBLEVBQXlCVyxNQUFBQSxJQVg3QixLQUFBLEdBQUEsSUFBQSxNQUFBLE9BQUFJLEVBQUFvRCxTQUFBckUiLCJmaWxlIjoiaW5pdGlhbGl6ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBdXRoVG9rZW5NYXBwZXIgZnJvbSAnLi9hdXRoVG9rZW5NYXBwZXInO1xuaW1wb3J0IElkZW50aXR5TWlkZGxld2FyZSBmcm9tICcuL2lkZW50aXR5TWlkZGxld2FyZSc7XG5pbXBvcnQgUHJvamVjdGlvblJvdXRlciBmcm9tICcuL3Byb2plY3Rpb25Sb3V0ZXInO1xuaW1wb3J0IFRlc3RSb3V0ZXIgZnJvbSAnLi90ZXN0Um91dGVyJztcblxuaW1wb3J0IFNxbFByb2plY3Rpb25TdGF0ZSBmcm9tICcuL3NxbFByb2plY3Rpb25TdGF0ZSc7XG5pbXBvcnQgU3FsRXZlbnRGZWVkIGZyb20gJy4vc3FsRXZlbnRGZWVkJztcblxuaW1wb3J0IHByb2plY3Rpb25TdG9yZSBmcm9tICcuL3Byb2plY3Rpb25TdG9yZSc7XG5pbXBvcnQgSWRlbnRpdHkgZnJvbSAnLi9pZGVudGl0eSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2plY3Rpb25zIHtcblxuICBzdGF0aWMgaW5pdGlhbGl6ZSA9IGFzeW5jICh7IGNvbnRhaW5lciwgY29uZmlnLCBkYiwgc3RvcmVGb2xkZXIsIHZpZXdGb2xkZXIsIGlkZW50aXR5TWFwcGVyID0gdG9rZW4gPT4gbmV3IElkZW50aXR5KHRva2VuKSB9KSA9PiB7XG4gICAgY29udGFpbmVyLnJlZ2lzdGVyKCdkYicsICgpID0+IGRiKTtcblxuICAgIGF3YWl0IHByb2plY3Rpb25TdG9yZShjb25maWcoJ2Nvbm5lY3Rpb25zJykubW9uZ29VcmwpO1xuXG4gICAgY29uc3QgcHJvamVjdGlvblN0YXRlID0gbmV3IFNxbFByb2plY3Rpb25TdGF0ZSgpO1xuXG4gICAgY29uc3Qga2V5ID0gYXdhaXQgcHJvamVjdGlvblN0YXRlLmdldEFjdGl2ZUtleSgpO1xuICAgIGxldCBwcm9qZWN0aW9uQWN0aXZlU3RhdGUgPSB7IGtleSwgc3RhdGU6ICdydW5uaW5nJywgc3dhcDogbnVsbCB9O1xuXG4gICAgY29uc3Qgc3RvcmVzID0gT2JqZWN0LmVudHJpZXMoc3RvcmVGb2xkZXIpXG4gICAgICAucmVkdWNlKChyZXN1bHQsIHsgWzBdOiBuYW1lLCBbMV06IFN0b3JlIH0pID0+IHtcbiAgICAgICAgcmVzdWx0W25hbWVdID0gY29udGFpbmVyLnJlc29sdmUoU3RvcmUsIHsgYWN0aXZlS2V5OiBrZXkgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LCB7fSk7XG5cbiAgICBjb25zdCB2aWV3cyA9IE9iamVjdC5lbnRyaWVzKHZpZXdGb2xkZXIpXG4gICAgICAucmVkdWNlKChyZXN1bHQsIHsgWzBdOiBjbGllbnQsIFsxXTogY2xpZW50Vmlld3MgfSkgPT4ge1xuICAgICAgICByZXN1bHRbY2xpZW50XSA9IE9iamVjdC5lbnRyaWVzKGNsaWVudFZpZXdzKS5tYXAoKHsgWzBdOiBuYW1lLCBbMV06IFZpZXcgfSkgPT4gKHsgbmFtZSwgdmlldzogY29udGFpbmVyLnJlc29sdmUoVmlldywgW3N0b3Jlc10pIH0pKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0sIHt9KTtcblxuICAgIGNvbnN0IHNxbEV2ZW50RmVlZCA9IG5ldyBTcWxFdmVudEZlZWQoe1xuICAgICAgZGIsXG4gICAgICBwcm9qZWN0aW9uU3RhdGUsXG4gICAgICBhY3RpdmVTdGF0ZTogcHJvamVjdGlvbkFjdGl2ZVN0YXRlXG4gICAgfSk7XG4gICAgT2JqZWN0LnZhbHVlcyhzdG9yZXMpLmZpbHRlcihzdG9yZSA9PiBzdG9yZS5vbkV2ZW50KS5mb3JFYWNoKHAgPT4gc3FsRXZlbnRGZWVkLnN1YnNjcmliZShlID0+IHAub25FdmVudChlKSkpO1xuXG5cbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyczoge1xuICAgICAgICBwcm9qZWN0aW9uOiBuZXcgUHJvamVjdGlvblJvdXRlcih2aWV3cyksXG4gICAgICAgIHRlc3Q6IG5ldyBUZXN0Um91dGVyKE9iamVjdC52YWx1ZXMoc3RvcmVzKSwgc3FsRXZlbnRGZWVkLCBwcm9qZWN0aW9uQWN0aXZlU3RhdGUpXG4gICAgICB9LFxuICAgICAgbWlkZGxld2FyZToge1xuICAgICAgICBpZGVudGl0eTogbmV3IElkZW50aXR5TWlkZGxld2FyZShuZXcgQXV0aFRva2VuTWFwcGVyKHtcbiAgICAgICAgICBzZWNyZXQ6IGNvbmZpZy5kZWNyeXB0KGNvbmZpZygnYXV0aGVudGljYXRpb24nKS5zZWNyZXQpLFxuICAgICAgICAgIGlkZW50aXR5TWFwcGVyXG4gICAgICAgIH0pKS5pbmplY3RcbiAgICAgIH0sXG4gICAgICBzdG9yZXMsXG4gICAgICB2aWV3c1xuICAgIH07XG4gIH1cbn1cbiJdfQ==
