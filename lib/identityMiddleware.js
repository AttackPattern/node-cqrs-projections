"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _identity=_interopRequireDefault(require("./identity"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,t,n,r,i,a,o){try{var u=e[a](o),c=u.value}catch(e){return void n(e)}u.done?t(c):Promise.resolve(c).then(r,i)}function _asyncToGenerator(u){return function(){var e=this,o=arguments;return new Promise(function(t,n){var r=u.apply(e,o);function i(e){asyncGeneratorStep(r,t,n,i,a,"next",e)}function a(e){asyncGeneratorStep(r,t,n,i,a,"throw",e)}i(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var IdentityMiddleware=function e(t){var a=this;_classCallCheck(this,e),_defineProperty(this,"inject",function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,a.getIdentity(t);case 3:return t.$identity=e.sent,e.next=6,n();case 6:e.next=13;break;case 8:e.prev=8,e.t0=e.catch(0),console.log("Failed validating authentication token",e.t0),t.status=401,t.body={error:e.t0.name||"Failed validating authentication token"};case 13:case"end":return e.stop()}},e,null,[[0,8]])}));return function(e,t){return n.apply(this,arguments)}}()),_defineProperty(this,"getIdentity",function(e){var t,n=(null===(t=e.headers.authorization)||void 0===t?void 0:t.split(" "))||[],r=n[0],i=n[1];return(i=i||r)?a.authTokenMapper.verify(i):{identity:_identity.default.anonymous}}),this.authTokenMapper=t};exports.default=IdentityMiddleware;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZW50aXR5TWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJfaWRlbnRpdHkiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIklkZW50aXR5TWlkZGxld2FyZSIsImF1dGhUb2tlbk1hcHBlciIsIl90aGlzIiwidGhpcyIsIl9jbGFzc0NhbGxDaGVjayIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9yZWYiLCJfYXN5bmNUb0dlbmVyYXRvciIsInJlZ2VuZXJhdG9yUnVudGltZSIsIm1hcmsiLCJfY2FsbGVlIiwiY3R4IiwibmV4dCIsIndyYXAiLCJfY29udGV4dCIsInByZXYiLCJnZXRJZGVudGl0eSIsIiRpZGVudGl0eSIsInNlbnQiLCJ0MCIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJib2R5IiwiZXJyb3IiLCJuYW1lIiwic3RvcCIsIl94IiwiX3gyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfY3R4JGhlYWRlcnMkYXV0aG9yaXoiLCJfcmVmMiIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3BsaXQiLCJ0eXBlIiwidG9rZW4iLCJ2ZXJpZnkiLCJpZGVudGl0eSIsIklkZW50aXR5IiwiYW5vbnltb3VzIl0sIm1hcHBpbmdzIjoiMkZBQUEsSUFBQUEsVUFBQUMsdUJBQUFDLFFBQUEsMHNCQUVxQkMsbUJBQ25CLFNBQUFBLEVBQVlDLEdBQWlCLElBQUFDLEVBQUFDLEtBQUFDLGdCQUFBRCxLQUFBSCxHQUFBSyxnQkFBQUYsS0FBQSxTQUFBLFdBQUEsSUFBQUcsRUFBQUMsa0JBQUFDLG1CQUFBQyxLQUgvQixTQUFBQyxFQUFBQyxFQUFBQyxHQUFBLE9BQUFKLG1CQUFBSyxLQUFBLFNBQUFDLEdBQUEsT0FBQSxPQUFBQSxFQUFBQyxLQUFBRCxFQUFBRixNQUFBLEtBQUEsRUFBQSxPQUFBRSxFQUFBQyxLQUFBLEVBQUFELEVBQUFGLEtBQUEsRUFTNEJWLEVBQUtjLFlBQVlMLEdBVDdDLEtBQUEsRUFBQSxPQVNNQSxFQUFJTSxVQVRWSCxFQUFBSSxLQUFBSixFQUFBRixLQUFBLEVBVVlBLElBVlosS0FBQSxFQUFBRSxFQUFBRixLQUFBLEdBQUEsTUFBQSxLQUFBLEVBQUFFLEVBQUFDLEtBQUEsRUFBQUQsRUFBQUssR0FBQUwsRUFBQSxNQUFBLEdBYU1NLFFBQVFDLElBQUkseUNBQVpQLEVBQUFLLElBQ0FSLEVBQUlXLE9BQVMsSUFDYlgsRUFBSVksS0FBTyxDQUNUQyxNQUFPVixFQUFBSyxHQUFJTSxNQUFRLDBDQWhCM0IsS0FBQSxHQUFBLElBQUEsTUFBQSxPQUFBWCxFQUFBWSxTQUFBaEIsRUFBQSxLQUFBLENBQUEsQ0FBQSxFQUFBLFFBRytCLE9BQUEsU0FBQWlCLEVBQUFDLEdBQUEsT0FBQXRCLEVBQUF1QixNQUFBMUIsS0FBQTJCLFlBQUEsSUFBQXpCLGdCQUFBRixLQUFBLGNBa0JmLFNBQUFRLEdBQU8sSUFBQW9CLEVBQUFDLEdBbEJRLFFBQUFELEVBQUFwQixFQUFBc0IsUUFBQUMscUJBQUEsSUFBQUgsT0FBQSxFQUFBQSxFQUFBSSxNQUFBLE9BQUEsR0FBQUMsRUFrQlJKLEVBbEJRLEdBQUFLLEVBa0JSTCxFQWxCUSxHQUFBLE9BQUFLLEVBQUFBLEdBQUFELEdBQUFsQyxFQUFBRCxnQkFBQXFDLE9BQUFELEdBQUEsQ0FBQUUsU0FBQUMsVUFBQUEsUUFBQUMsYUFDM0J0QyxLQUFLRixnQkFBa0JBIiwiZmlsZSI6ImlkZW50aXR5TWlkZGxld2FyZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJZGVudGl0eSBmcm9tICcuL2lkZW50aXR5JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSWRlbnRpdHlNaWRkbGV3YXJlIHtcbiAgY29uc3RydWN0b3IoYXV0aFRva2VuTWFwcGVyKSB7XG4gICAgdGhpcy5hdXRoVG9rZW5NYXBwZXIgPSBhdXRoVG9rZW5NYXBwZXI7XG4gIH1cblxuICBpbmplY3QgPSBhc3luYyAoY3R4LCBuZXh0KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGN0eC4kaWRlbnRpdHkgPSBhd2FpdCB0aGlzLmdldElkZW50aXR5KGN0eCk7XG4gICAgICBhd2FpdCBuZXh0KCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdGYWlsZWQgdmFsaWRhdGluZyBhdXRoZW50aWNhdGlvbiB0b2tlbicsIGVycik7XG4gICAgICBjdHguc3RhdHVzID0gNDAxO1xuICAgICAgY3R4LmJvZHkgPSB7XG4gICAgICAgIGVycm9yOiBlcnIubmFtZSB8fCAnRmFpbGVkIHZhbGlkYXRpbmcgYXV0aGVudGljYXRpb24gdG9rZW4nXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGdldElkZW50aXR5ID0gY3R4ID0+IHtcbiAgICBsZXQgeyBbMF06IHR5cGUsIFsxXTogdG9rZW4gfSA9IGN0eC5oZWFkZXJzLmF1dGhvcml6YXRpb24/LnNwbGl0KCcgJykgfHwgW107XG5cbiAgICB0b2tlbiA9IHRva2VuIHx8IHR5cGU7XG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgcmV0dXJuIHsgaWRlbnRpdHk6IElkZW50aXR5LmFub255bW91cyB9O1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5hdXRoVG9rZW5NYXBwZXIudmVyaWZ5KHRva2VuKTtcbiAgfVxufVxuIl19
