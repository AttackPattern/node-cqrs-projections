"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _async=require("async"),_bookshelf=_interopRequireDefault(require("bookshelf"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,t,r,n,a,o,u){try{var s=e[o](u),i=s.value}catch(e){return void r(e)}s.done?t(i):Promise.resolve(i).then(n,a)}function _asyncToGenerator(s){return function(){var e=this,u=arguments;return new Promise(function(t,r){var n=s.apply(e,u);function a(e){asyncGeneratorStep(n,t,r,a,o,"next",e)}function o(e){asyncGeneratorStep(n,t,r,a,o,"throw",e)}a(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var pollingInterval=100,eventBatchSize=10;function fromStoredEvent(e){return _objectSpread({aggregate:e.aggregate,aggregateId:e.aggregateId,timestamp:e.timestamp,type:e.type,sequenceNumber:e.sequenceNumber,actor:e.actor,position:JSON.parse(e.position)},JSON.parse(e.body))}var EventStore=function(){function a(e){var i=this,t=e.db,r=e.projectionState,n=e.stores;_classCallCheck(this,a),_defineProperty(this,"consumeEventStream",_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,r,n,a,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.projectionState.bookmark();case 2:return t=e.sent,e.next=5,i.getNextEvents(t);case 5:if(r=e.sent,n=r.events,a=r.bookmark,o=r.lastBookmark,!("starting"===i.currentState&&o<=a&&0===i.queue.length())){e.next=14;break}console.log('Projections is now built and entering "Running" state'),i.setState("running"),e.next=18;break;case 14:if("resetting"===i.currentState&&o<=a&&0===i.queue.length())return console.log("we are prob done resetting"),e.next=18,i.finishReset();e.next=18;break;case 18:if(n.length)return n.forEach(function(e){i.queue.push(e)}),e.next=22,i.projectionState.setBookmark(a);e.next=22;break;case 22:setTimeout(_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.consumeEventStream();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e)})),a<o?0:pollingInterval);case 23:case"end":return e.stop()}},e)}))),_defineProperty(this,"getNextEvents",function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var r,n,a,o,u,s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,i.Event.where("id",">",t).query(function(e){return e.orderBy("id","asc")}).fetchPage({pageSize:eventBatchSize});case 3:return r=e.sent.toJSON(),n=t,r.length&&(a=r.length,o=r[a-1],n=o.id),e.next=8,i.Event.query(function(e){return e.orderBy("id","desc")}).fetchPage({pageSize:1});case 8:return u=e.sent.toJSON()[0],s=u&&u.id,e.abrupt("return",{events:r.map(function(e){return fromStoredEvent(e)}),bookmark:n,lastBookmark:s});case 13:return e.prev=13,e.t0=e.catch(0),"ER_BAD_DB_ERROR"!==e.t0.code&&console.log("Error loading events",e.t0),e.abrupt("return",{events:[],bookmark:t});case 17:case"end":return e.stop()}},e,null,[[0,13]])}));return function(e){return t.apply(this,arguments)}}()),_defineProperty(this,"reset",function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.projectionState.reset(t);case 2:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}()),this.subscriptions=[],this.projectionState=r,this.currentState="starting",this.stores=n,this.queue=(0,_async.queue)(function(){var r=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Event: ".concat(r.aggregateId," ").concat(r.aggregate,".").concat(r.type)),e.next=3,Promise.all(i.subscriptions.map(function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t(r);case 3:return e.abrupt("return",e.sent);case 6:e.prev=6,e.t0=e.catch(0),global.log?global.log.note({error:e.t0,aggregateId:r.aggregateId,aggregate:r.aggregate,type:r.type,event:r}):console.log(e.t0);case 9:case"end":return e.stop()}},e,null,[[0,6]])}));return function(e){return t.apply(this,arguments)}}()));case 3:return e.abrupt("return",t());case 4:case"end":return e.stop()}},e)}));return function(e,t){return r.apply(this,arguments)}}()),this.Event=(0,_bookshelf.default)(t.knex("eventstore")).plugin("pagination").Model.extend({tableName:"events"}),this.consumeEventStream()}var e;return _createClass(a,[{key:"finishReset",value:(e=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all(this.stores.map(function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.t0=t.swap,e.t0)return e.next=4,t.swap();e.next=5;break;case 4:e.t0=e.sent;case 5:return e.abrupt("return",e.t0);case 6:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}()));case 2:this.setState("running");case 3:case"end":return e.stop()}},e,this)})),function(){return e.apply(this,arguments)})},{key:"subscribe",value:function(e){this.subscriptions.push(e)}},{key:"getState",value:function(){return this.currentState}},{key:"setState",value:function(e){this.currentState=e}}]),a}();exports.default=EventStore;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
