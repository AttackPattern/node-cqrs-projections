"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,t,r,n,o,a,u){try{var s=e[a](u),c=s.value}catch(e){return void r(e)}s.done?t(c):Promise.resolve(c).then(n,o)}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){function a(e){asyncGeneratorStep(s,n,o,a,u,"next",e)}function u(e){asyncGeneratorStep(s,n,o,a,u,"throw",e)}var s=e.apply(t,r);a(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){_defineProperty(e,t,r[t])})}return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function fromStoredEvent(e){return _objectSpread({aggregate:e.aggregate,aggregateId:e.aggregateId,timestamp:e.timestamp,type:e.type,sequenceNumber:e.sequenceNumber,actor:e.actor,position:JSON.parse(e.position)},JSON.parse(e.body))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _async=require("async"),_bookshelf=_interopRequireDefault(require("bookshelf")),pollingInterval=100,eventBatchSize=10,EventStore=function(){function e(t){var r=this,n=t.db,o=t.projectionState;_classCallCheck(this,e),_defineProperty(this,"consumeEventStream",_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,o,a,u;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.projectionState.bookmark();case 2:return t=e.sent,e.next=5,r.getNextEvents(t);case 5:if(n=e.sent,o=n.events,a=n.bookmark,u=n.lastBookmark,!o.length){e.next=13;break}return o.forEach(function(e){r.queue.push(e)}),e.next=13,r.projectionState.setBookmark(a);case 13:setTimeout(_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.consumeEventStream();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),a<u?0:pollingInterval);case 14:case"end":return e.stop()}},e,this)}))),_defineProperty(this,"getNextEvents",function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,o,a,u,s,c;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r.Event.where("id",">",t).query(function(e){return e.orderBy("id","asc")}).fetchPage({pageSize:eventBatchSize});case 3:return n=e.sent.toJSON(),o=t,n.length&&(a=n.length,u=n[a-1],o=u.id),e.next=8,r.Event.query(function(e){return e.orderBy("id","desc")}).fetchPage({pageSize:1});case 8:return s=e.sent.toJSON()[0],c=s&&s.id,e.abrupt("return",{events:n.map(function(e){return fromStoredEvent(e)}),bookmark:o,lastBookmark:c});case 13:return e.prev=13,e.t0=e.catch(0),"ER_BAD_DB_ERROR"!==e.t0.code&&console.log("Error loading events",e.t0),e.abrupt("return",{events:[],bookmark:t});case 17:case"end":return e.stop()}},e,this,[[0,13]])}));return function(t){return e.apply(this,arguments)}}()),_defineProperty(this,"reset",_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.projectionState.reset();case 2:case"end":return e.stop()}},e,this)}))),this.subscriptions=[],this.projectionState=o,this.queue=(0,_async.queue)(function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Event: ".concat(t.aggregateId," ").concat(t.aggregate,".").concat(t.type)),e.next=3,Promise.all(r.subscriptions.map(function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r(t);case 3:return e.abrupt("return",e.sent);case 6:e.prev=6,e.t0=e.catch(0),console.log(e.t0);case 9:case"end":return e.stop()}},e,this,[[0,6]])}));return function(t){return e.apply(this,arguments)}}()));case 3:return e.abrupt("return",n());case 4:case"end":return e.stop()}},e,this)}));return function(t,r){return e.apply(this,arguments)}}()),this.Event=(0,_bookshelf.default)(n.knex("eventstore")).plugin("pagination").Model.extend({tableName:"events"}),this.consumeEventStream()}return _createClass(e,[{key:"subscribe",value:function(e){this.subscriptions.push(e)}}]),e}();exports.default=EventStore;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNxbEV2ZW50RmVlZC5qcyJdLCJuYW1lcyI6WyJmcm9tU3RvcmVkRXZlbnQiLCJldmVudCIsIl9vYmplY3RTcHJlYWQiLCJhZ2dyZWdhdGUiLCJhZ2dyZWdhdGVJZCIsInRpbWVzdGFtcCIsInR5cGUiLCJzZXF1ZW5jZU51bWJlciIsImFjdG9yIiwicG9zaXRpb24iLCJKU09OIiwicGFyc2UiLCJib2R5IiwiX2FzeW5jIiwicmVxdWlyZSIsIl9ib29rc2hlbGYiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicG9sbGluZ0ludGVydmFsIiwiZXZlbnRCYXRjaFNpemUiLCJFdmVudFN0b3JlIiwiX3JlZiIsIl90aGlzIiwidGhpcyIsImRiIiwicHJvamVjdGlvblN0YXRlIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2RlZmluZVByb3BlcnR5IiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZTIiLCJib29rbWFyayIsIl9yZWYzIiwiZXZlbnRzIiwibmV3Qm9va21hcmsiLCJsYXN0Qm9va21hcmsiLCJ3cmFwIiwiX2NvbnRleHQyIiwicHJldiIsIm5leHQiLCJzZW50IiwiZ2V0TmV4dEV2ZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJxdWV1ZSIsInB1c2giLCJzZXRCb29rbWFyayIsInNldFRpbWVvdXQiLCJfY2FsbGVlIiwiX2NvbnRleHQiLCJjb25zdW1lRXZlbnRTdHJlYW0iLCJhYnJ1cHQiLCJzdG9wIiwiX3JlZjUiLCJfY2FsbGVlMyIsImwiLCJsYXN0RXZlbnQiLCJsYXN0UmVjb3JkIiwiX2NvbnRleHQzIiwiRXZlbnQiLCJ3aGVyZSIsIm9yZGVyQnkiLCJmZXRjaFBhZ2UiLCJwYWdlU2l6ZSIsInRvSlNPTiIsImlkIiwicXVlcnkiLCJxYiIsIm1hcCIsImUiLCJ0MCIsImNvZGUiLCJjb25zb2xlIiwibG9nIiwiX3giLCJhcHBseSIsImFyZ3VtZW50cyIsIl9jYWxsZWU0IiwiX2NvbnRleHQ0IiwicmVzZXQiLCJzdWJzY3JpcHRpb25zIiwiX3JlZjciLCJfY2FsbGVlNiIsImNhbGxiYWNrIiwiX2NvbnRleHQ2IiwiY29uY2F0IiwiUHJvbWlzZSIsImFsbCIsIl9yZWY4IiwiX2NhbGxlZTUiLCJzIiwiX2NvbnRleHQ1IiwiX3g0IiwiX3gyIiwiX3gzIiwia25leCIsInRhYmxlTmFtZSIsInByb2plY3Rpb24iXSwibWFwcGluZ3MiOiI0ekNBTUEsUUFBU0EsaUJBQWdCQyxHQU56QixNQUFBQyxnQkFRSUMsVUFBV0YsRUFBTUUsVUFQckJDLFlBQUFILEVBQUFHLFlBU0lDLFVBQVdKLEVBQU1JLFVBQ2pCQyxLQUFNTCxFQUFNSyxLQUNaQyxlQUFnQk4sRUFBTU0sZUFDdEJDLE1BQU9QLEVBQU1PLE1BQ2JDLFNBQVVDLEtBQUtDLE1BQU1WLEVBQU1RLFdBQ3hCQyxLQUFLQyxNQUFNVixFQUFNVyxvRkFmeEIsSUFBQUMsUUFBQUMsUUFBQSxTQUNBQyxXQUFBQyx1QkFBQUYsUUFBQSxjQUVNRyxnQkFBa0IsSUFDbEJDLGVBQWlCLEdBZUZDLHNCQUNuQixRQUFBQSxHQUFBQyxHQUFxQyxHQUFBQyxHQUFBQyxLQUF2QkMsRUFBdUJILEVBQXZCRyxHQUFJQyxFQUFtQkosRUFBbkJJLGVBQW1CQyxpQkFBQUgsS0FBQUgsR0FBQU8sZ0JBQUFKLEtBQUEscUJBQUFLLGtCQUFBQyxtQkFBQUMsS0E4QmhCLFFBQUFDLEtBQUEsR0FBQUMsR0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsQ0FBQSxPQUFBUCxvQkFBQVEsS0FBQSxTQUFBQyxHQUFBLE9BQUEsT0FBQUEsRUFBQUMsS0FBQUQsRUFBQUUsTUFBQSxJQUFBLEdBQUEsTUFBQUYsR0FBQUUsS0FBQSxFQTlCZ0JsQixFQUFBRyxnQkFBQU8sVUE4QmhCLEtBQUEsR0FBQSxNQTlCZ0JBLEdBOEJoQk0sRUFBQUcsS0FBQUgsRUFBQUUsS0FBQSxFQUV5Q2xCLEVBQUtvQixjQUFjVixFQUY1RCxLQUFBLEdBQUEsR0FBQUMsRUFBQUssRUFBQUcsS0FFYlAsRUFGYUQsRUFFYkMsT0FB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RCxLQUFBc0QsZ0JBWGJwRSxLQUFLbUQsT0FBUW5ELEVBQUFBLFdBQUFBLFNBTmZlLEVBQUF3RSxLQUFBLGVBT0V0RixPQUFVQyxjQUNQQSxNQUFLQyxRQUVYcUYsVUFBQSxXQTBCRzFFLEtBQUs0Qiw0RUF2QjhCK0MsR0EyQm5DM0UsS0FBSzBELGNBQWNuQyxLQUFLb0QiLCJmaWxlIjoic3FsRXZlbnRGZWVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcXVldWUgfSBmcm9tICdhc3luYyc7XG5pbXBvcnQgYm9va3NoZWxmIGZyb20gJ2Jvb2tzaGVsZic7XG5cbmNvbnN0IHBvbGxpbmdJbnRlcnZhbCA9IDEwMDtcbmNvbnN0IGV2ZW50QmF0Y2hTaXplID0gMTA7XG5cbmZ1bmN0aW9uIGZyb21TdG9yZWRFdmVudChldmVudCkge1xuICByZXR1cm4ge1xuICAgIGFnZ3JlZ2F0ZTogZXZlbnQuYWdncmVnYXRlLFxuICAgIGFnZ3JlZ2F0ZUlkOiBldmVudC5hZ2dyZWdhdGVJZCxcbiAgICB0aW1lc3RhbXA6IGV2ZW50LnRpbWVzdGFtcCxcbiAgICB0eXBlOiBldmVudC50eXBlLFxuICAgIHNlcXVlbmNlTnVtYmVyOiBldmVudC5zZXF1ZW5jZU51bWJlcixcbiAgICBhY3RvcjogZXZlbnQuYWN0b3IsXG4gICAgcG9zaXRpb246IEpTT04ucGFyc2UoZXZlbnQucG9zaXRpb24pLFxuICAgIC4uLkpTT04ucGFyc2UoZXZlbnQuYm9keSlcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnRTdG9yZSB7XG4gIGNvbnN0cnVjdG9yKHsgZGIsIHByb2plY3Rpb25TdGF0ZSB9KSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XG4gICAgdGhpcy5wcm9qZWN0aW9uU3RhdGUgPSBwcm9qZWN0aW9uU3RhdGU7XG5cbiAgICB0aGlzLnF1ZXVlID0gcXVldWUoYXN5bmMgKGV2ZW50LCBjYWxsYmFjaykgPT4ge1xuICAgICAgY29uc29sZS5sb2coYEV2ZW50OiAke2V2ZW50LmFnZ3JlZ2F0ZUlkfSAke2V2ZW50LmFnZ3JlZ2F0ZX0uJHtldmVudC50eXBlfWApO1xuICAgICAgYXdhaXQgUHJvbWlzZS5hbGwodGhpcy5zdWJzY3JpcHRpb25zLm1hcChhc3luYyBzID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICByZXR1cm4gYXdhaXQgcyhldmVudCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH1cbiAgICAgIH0pKTtcbiAgICAgIHJldHVybiBjYWxsYmFjaygpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5FdmVudCA9IGJvb2tzaGVsZihkYi5rbmV4KCdldmVudHN0b3JlJykpXG4gICAgICAucGx1Z2luKCdwYWdpbmF0aW9uJylcbiAgICAgIC5Nb2RlbC5leHRlbmQoe1xuICAgICAgICB0YWJsZU5hbWU6ICdldmVudHMnXG4gICAgICB9KTtcblxuICAgIHRoaXMuY29uc3VtZUV2ZW50U3RyZWFtKCk7XG4gIH1cblxuICBzdWJzY3JpYmUocHJvamVjdGlvbikge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKHByb2plY3Rpb24pO1xuICB9XG5cbiAgY29uc3VtZUV2ZW50U3RyZWFtID0gYXN5bmMgKCkgPT4ge1xuICAgIGxldCBib29rbWFyayA9IGF3YWl0IHRoaXMucHJvamVjdGlvblN0YXRlLmJvb2ttYXJrKCk7XG4gICAgbGV0IHsgZXZlbnRzLCBib29rbWFyazogbmV3Qm9va21hcmssIGxhc3RCb29rbWFyayB9ID0gYXdhaXQgdGhpcy5nZXROZXh0RXZlbnRzKGJvb2ttYXJrKTtcblxuICAgIGlmIChldmVudHMubGVuZ3RoKSB7XG4gICAgICBldmVudHMuZm9yRWFjaChldmVudCA9PiB7XG4gICAgICAgIHRoaXMucXVldWUucHVzaChldmVudCk7XG4gICAgICB9KTtcblxuICAgICAgYXdhaXQgdGhpcy5wcm9qZWN0aW9uU3RhdGUuc2V0Qm9va21hcmsobmV3Qm9va21hcmspO1xuICAgIH1cbiAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IGF3YWl0IHRoaXMuY29uc3VtZUV2ZW50U3RyZWFtKCksIG5ld0Jvb2ttYXJrIDwgbGFzdEJvb2ttYXJrID8gMCA6IHBvbGxpbmdJbnRlcnZhbCk7XG4gIH1cblxuICBnZXROZXh0RXZlbnRzID0gYXN5bmMgYm9va21hcmsgPT4ge1xuICAgIHRyeSB7XG4gICAgICBsZXQgZXZlbnRzID0gKGF3YWl0IHRoaXMuRXZlbnRcbiAgICAgICAgLndoZXJlKCdpZCcsICc+JywgYm9va21hcmspXG4gICAgICAgIC5xdWVyeShxYiA9PiBxYi5vcmRlckJ5KCdpZCcsICdhc2MnKSlcbiAgICAgICAgLmZldGNoUGFnZSh7IHBhZ2VTaXplOiBldmVudEJhdGNoU2l6ZSB9KVxuICAgICAgKS50b0pTT04oKTtcblxuICAgICAgbGV0IG5ld0Jvb2ttYXJrID0gYm9va21hcms7XG4gICAgICBpZiAoZXZlbnRzLmxlbmd0aCkge1xuICAgICAgICBsZXQgeyBsZW5ndGg6IGwsIFtsIC0gMV06IGxhc3RFdmVudCB9ID0gZXZlbnRzO1xuICAgICAgICBuZXdCb29rbWFyayA9IGxhc3RFdmVudC5pZDtcbiAgICAgIH1cblxuICAgICAgbGV0IGxhc3RSZWNvcmQgPSAoYXdhaXQgdGhpcy5FdmVudC5xdWVyeShxYiA9PiBxYi5vcmRlckJ5KCdpZCcsICdkZXNjJykpLmZldGNoUGFnZSh7IHBhZ2VTaXplOiAxIH0pKS50b0pTT04oKSBbMF07XG4gICAgICBsZXQgbGFzdEJvb2ttYXJrID0gbGFzdFJlY29yZCAmJiBsYXN0UmVjb3JkLmlkO1xuXG4gICAgICByZXR1cm4geyBldmVudHM6IGV2ZW50cy5tYXAoZSA9PiBmcm9tU3RvcmVkRXZlbnQoZSkpLCBib29rbWFyazogbmV3Qm9va21hcmssIGxhc3RCb29rbWFyayB9O1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgaWYgKGUuY29kZSAhPT0gJ0VSX0JBRF9EQl9FUlJPUicpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0Vycm9yIGxvYWRpbmcgZXZlbnRzJywgZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4geyBldmVudHM6IFtdLCBib29rbWFyazogYm9va21hcmsgfTtcbiAgICB9XG4gIH1cblxuICByZXNldCA9IGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCB0aGlzLnByb2plY3Rpb25TdGF0ZS5yZXNldCgpO1xuICB9XG59XG4iXX0=
