"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _async=require("async"),_bookshelf=_interopRequireDefault(require("bookshelf"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,t,r,n,o,a,u){try{var s=e[a](u),c=s.value}catch(e){return void r(e)}s.done?t(c):Promise.resolve(c).then(n,o)}function _asyncToGenerator(s){return function(){var e=this,u=arguments;return new Promise(function(t,r){var n=s.apply(e,u);function o(e){asyncGeneratorStep(n,t,r,o,a,"next",e)}function a(e){asyncGeneratorStep(n,t,r,o,a,"throw",e)}o(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var pollingInterval=100,eventBatchSize=10;function fromStoredEvent(e){return _objectSpread({aggregate:e.aggregate,aggregateId:e.aggregateId,timestamp:e.timestamp,type:e.type,sequenceNumber:e.sequenceNumber,actor:e.actor,position:JSON.parse(e.position)},JSON.parse(e.body))}var EventStore=function(){function n(e){var c=this,t=e.db,r=e.projectionState;_classCallCheck(this,n),_defineProperty(this,"consumeEventStream",_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,r,n,o,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c.projectionState.bookmark();case 2:return t=e.sent,e.next=5,c.getNextEvents(t);case 5:if(r=e.sent,n=r.events,o=r.bookmark,a=r.lastBookmark,n.length)return n.forEach(function(e){c.queue.push(e)}),e.next=13,c.projectionState.setBookmark(o);e.next=13;break;case 13:setTimeout(_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c.consumeEventStream();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),o<a?0:pollingInterval);case 14:case"end":return e.stop()}},e,this)}))),_defineProperty(this,"getNextEvents",function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var r,n,o,a,u,s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,c.Event.where("id",">",t).query(function(e){return e.orderBy("id","asc")}).fetchPage({pageSize:eventBatchSize});case 3:return r=e.sent.toJSON(),n=t,r.length&&(o=r.length,a=r[o-1],n=a.id),e.next=8,c.Event.query(function(e){return e.orderBy("id","desc")}).fetchPage({pageSize:1});case 8:return u=e.sent.toJSON()[0],s=u&&u.id,e.abrupt("return",{events:r.map(function(e){return fromStoredEvent(e)}),bookmark:n,lastBookmark:s});case 13:return e.prev=13,e.t0=e.catch(0),"ER_BAD_DB_ERROR"!==e.t0.code&&console.log("Error loading events",e.t0),e.abrupt("return",{events:[],bookmark:t});case 17:case"end":return e.stop()}},e,this,[[0,13]])}));return function(e){return t.apply(this,arguments)}}()),_defineProperty(this,"reset",_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c.projectionState.reset();case 2:case"end":return e.stop()}},e,this)}))),this.subscriptions=[],this.projectionState=r,this.queue=(0,_async.queue)(function(){var r=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Event: ".concat(r.aggregateId," ").concat(r.aggregate,".").concat(r.type)),e.next=3,Promise.all(c.subscriptions.map(function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t(r);case 3:return e.abrupt("return",e.sent);case 6:e.prev=6,e.t0=e.catch(0),global.log?global.log.note({error:e.t0,aggregateId:r.aggregateId,aggregate:r.aggregate,type:r.type,event:r}):console.log(e.t0);case 9:case"end":return e.stop()}},e,this,[[0,6]])}));return function(e){return t.apply(this,arguments)}}()));case 3:return e.abrupt("return",t());case 4:case"end":return e.stop()}},e,this)}));return function(e,t){return r.apply(this,arguments)}}()),this.Event=(0,_bookshelf.default)(t.knex("eventstore")).plugin("pagination").Model.extend({tableName:"events"}),this.consumeEventStream()}return _createClass(n,[{key:"subscribe",value:function(e){this.subscriptions.push(e)}}]),n}();exports.default=EventStore;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
