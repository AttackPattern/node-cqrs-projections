"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise(function(n,a){function o(e,t){try{var r=i[e](t),o=r.value}catch(e){return void a(e)}r.done?n(o):Promise.resolve(o).then(u,s)}function u(e){o("next",e)}function s(e){o("throw",e)}var i=e.apply(t,r);u()})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _extends(){return _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},_extends.apply(this,arguments)}function fromStoredEvent(e){return _extends({aggregate:e.aggregate,aggregateId:e.aggregateId,timestamp:e.timestamp,type:e.type,sequenceNumber:e.sequenceNumber,actor:e.actor,position:JSON.parse(e.position)},JSON.parse(e.body))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _async=require("async"),_bookshelf=_interopRequireDefault(require("bookshelf")),pollingInterval=100,eventBatchSize=10,EventStore=function(){function e(t){var r=this,n=t.db,a=t.projectionState;_classCallCheck(this,e),Object.defineProperty(this,"consumeEventStream",{configurable:!0,enumerable:!0,writable:!0,value:function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,a,o,u;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.projectionState.bookmark();case 2:return t=e.sent,e.next=5,r.getNextEvents(t);case 5:if(n=e.sent,a=n.events,o=n.bookmark,u=n.lastBookmark,!a.length){e.next=13;break}return a.forEach(function(e){r.queue.push(e)}),e.next=13,r.projectionState.setBookmark(o);case 13:setTimeout(_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.consumeEventStream();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),o<u?0:pollingInterval);case 14:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()}),Object.defineProperty(this,"getNextEvents",{configurable:!0,enumerable:!0,writable:!0,value:function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,a,o,u,s,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r.Event.where("id",">",t).query(function(e){return e.orderBy("id","asc")}).fetchPage({pageSize:eventBatchSize});case 3:return n=e.sent.toJSON(),a=t,n.length&&(o=n.length,u=n[o-1],a=u.id),e.next=8,r.Event.query(function(e){return e.orderBy("id","desc")}).fetchPage({pageSize:1});case 8:return s=e.sent.toJSON()[0],i=s&&s.id,e.abrupt("return",{events:n.map(function(e){return fromStoredEvent(e)}),bookmark:a,lastBookmark:i});case 13:return e.prev=13,e.t0=e.catch(0),"ER_BAD_DB_ERROR"!==e.t0.code&&console.log("Error loading events",e.t0),e.abrupt("return",{events:[],bookmark:t});case 17:case"end":return e.stop()}},e,this,[[0,13]])}));return function(t){return e.apply(this,arguments)}}()}),Object.defineProperty(this,"reset",{configurable:!0,enumerable:!0,writable:!0,value:function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.projectionState.reset();case 2:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()}),this.subscriptions=[],this.projectionState=a,this.queue=(0,_async.queue)(function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Event: ".concat(t.aggregateId," ").concat(t.aggregate,".").concat(t.type)),e.next=3,Promise.all(r.subscriptions.map(function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r(t);case 3:return e.abrupt("return",e.sent);case 6:e.prev=6,e.t0=e.catch(0),console.log(e.t0);case 9:case"end":return e.stop()}},e,this,[[0,6]])}));return function(t){return e.apply(this,arguments)}}()));case 3:return e.abrupt("return",n());case 4:case"end":return e.stop()}},e,this)}));return function(t,r){return e.apply(this,arguments)}}()),this.Event=(0,_bookshelf.default)(n.knex("eventstore")).plugin("pagination").Model.extend({tableName:"events"}),this.consumeEventStream()}return _createClass(e,[{key:"subscribe",value:function(e){this.subscriptions.push(e)}}]),e}();exports.default=EventStore;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
